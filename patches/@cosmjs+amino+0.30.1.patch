# diff --git a/node_modules/@cosmjs/amino/.DS_Store b/node_modules/@cosmjs/amino/.DS_Store
# new file mode 100644
# index 0000000..931d865
# Binary files /dev/null and b/node_modules/@cosmjs/amino/.DS_Store differ
# diff --git a/node_modules/@cosmjs/amino/build/addresses.spec.d.ts b/node_modules/@cosmjs/amino/build/addresses.spec.d.ts
# new file mode 100644
# index 0000000..cb0ff5c
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/addresses.spec.d.ts
# @@ -0,0 +1 @@
# +export {};
# diff --git a/node_modules/@cosmjs/amino/build/addresses.spec.js b/node_modules/@cosmjs/amino/build/addresses.spec.js
# new file mode 100644
# index 0000000..e5508d7
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/addresses.spec.js
# @@ -0,0 +1,68 @@
# +"use strict";
# +Object.defineProperty(exports, "__esModule", { value: true });
# +const encoding_1 = require("@cosmjs/encoding");
# +const addresses_1 = require("./addresses");
# +const encoding_2 = require("./encoding");
# +describe("addresses", () => {
# +    describe("pubkeyToRawAddress", () => {
# +        it("works for Secp256k1", () => {
# +            const pubkey = {
# +                type: "tendermint/PubKeySecp256k1",
# +                value: "AtQaCqFnshaZQp6rIkvAPyzThvCvXSDO+9AzbxVErqJP",
# +            };
# +            expect((0, addresses_1.pubkeyToRawAddress)(pubkey)).toEqual((0, encoding_1.fromBech32)("cosmos1h806c7khnvmjlywdrkdgk2vrayy2mmvf9rxk2r").data);
# +        });
# +        it("works for Ed25519", () => {
# +            const pubkey = {
# +                type: "tendermint/PubKeyEd25519",
# +                value: (0, encoding_1.toBase64)((0, encoding_1.fromHex)("12ee6f581fe55673a1e9e1382a0829e32075a0aa4763c968bc526e1852e78c95")),
# +            };
# +            expect((0, addresses_1.pubkeyToRawAddress)(pubkey)).toEqual((0, encoding_1.fromBech32)("cosmos1pfq05em6sfkls66ut4m2257p7qwlk448h8mysz").data);
# +        });
# +        it("works for multisig", () => {
# +            const test1 = (0, encoding_2.decodeBech32Pubkey)("wasmpub1addwnpepqwxttx8w2sfs6d8cuzqcuau84grp8xsw95qzdjkmvc44tnckskdxw3zw2km");
# +            const test2 = (0, encoding_2.decodeBech32Pubkey)("wasmpub1addwnpepq2gx7x7e29kge5a4ycunytyqr0u8ynql5h583s8r9wdads9m3v8ks6y0nhc");
# +            const test3 = (0, encoding_2.decodeBech32Pubkey)("wasmpub1addwnpepq0xfx5vavxmgdkn0p6x0l9p3udttghu3qcldd7ql08wa3xy93qq0xuzvtxc");
# +            const testgroup1 = {
# +                type: "tendermint/PubKeyMultisigThreshold",
# +                value: {
# +                    threshold: "2",
# +                    pubkeys: [test1, test2, test3],
# +                },
# +            };
# +            expect((0, addresses_1.pubkeyToRawAddress)(testgroup1)).toEqual((0, encoding_1.fromHex)("0892a77fab2fa7e192c3b7b2741e6682f3abb72f"));
# +        });
# +    });
# +    describe("pubkeyToAddress", () => {
# +        it("works for Secp256k1", () => {
# +            const prefix = "cosmos";
# +            const pubkey = {
# +                type: "tendermint/PubKeySecp256k1",
# +                value: "AtQaCqFnshaZQp6rIkvAPyzThvCvXSDO+9AzbxVErqJP",
# +            };
# +            expect((0, addresses_1.pubkeyToAddress)(pubkey, prefix)).toEqual("cosmos1h806c7khnvmjlywdrkdgk2vrayy2mmvf9rxk2r");
# +        });
# +        it("works for Ed25519", () => {
# +            const prefix = "cosmos";
# +            const pubkey = {
# +                type: "tendermint/PubKeyEd25519",
# +                value: (0, encoding_1.toBase64)((0, encoding_1.fromHex)("12ee6f581fe55673a1e9e1382a0829e32075a0aa4763c968bc526e1852e78c95")),
# +            };
# +            expect((0, addresses_1.pubkeyToAddress)(pubkey, prefix)).toEqual("cosmos1pfq05em6sfkls66ut4m2257p7qwlk448h8mysz");
# +        });
# +        it("works for multisig", () => {
# +            const test1 = (0, encoding_2.decodeBech32Pubkey)("wasmpub1addwnpepqwxttx8w2sfs6d8cuzqcuau84grp8xsw95qzdjkmvc44tnckskdxw3zw2km");
# +            const test2 = (0, encoding_2.decodeBech32Pubkey)("wasmpub1addwnpepq2gx7x7e29kge5a4ycunytyqr0u8ynql5h583s8r9wdads9m3v8ks6y0nhc");
# +            const test3 = (0, encoding_2.decodeBech32Pubkey)("wasmpub1addwnpepq0xfx5vavxmgdkn0p6x0l9p3udttghu3qcldd7ql08wa3xy93qq0xuzvtxc");
# +            const testgroup1 = {
# +                type: "tendermint/PubKeyMultisigThreshold",
# +                value: {
# +                    threshold: "2",
# +                    pubkeys: [test1, test2, test3],
# +                },
# +            };
# +            expect((0, addresses_1.pubkeyToAddress)(testgroup1, "wasm")).toEqual("wasm1pzf2wlat97n7rykrk7e8g8nxste6hde0r8jqsy");
# +        });
# +    });
# +});
# +//# sourceMappingURL=addresses.spec.js.map
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/addresses.spec.js.map b/node_modules/@cosmjs/amino/build/addresses.spec.js.map
# new file mode 100644
# index 0000000..047f853
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/addresses.spec.js.map
# @@ -0,0 +1 @@
# +{"version":3,"file":"addresses.spec.js","sourceRoot":"","sources":["../src/addresses.spec.ts"],"names":[],"mappings":"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"}
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/coins.d.ts b/node_modules/@cosmjs/amino/build/coins.d.ts
# index 8eb6964..0759a7e 100644
# --- a/node_modules/@cosmjs/amino/build/coins.d.ts
# +++ b/node_modules/@cosmjs/amino/build/coins.d.ts
# @@ -28,7 +28,3 @@ export declare function coins(amount: number | string, denom: string): Coin[];
#   * ```
#   */
#  export declare function parseCoins(input: string): Coin[];
# -/**
# - * Function to sum up coins with type Coin
# - */
# -export declare function addCoins(lhs: Coin, rhs: Coin): Coin;
# diff --git a/node_modules/@cosmjs/amino/build/coins.js b/node_modules/@cosmjs/amino/build/coins.js
# index 5b04dc7..ce72b0c 100644
# --- a/node_modules/@cosmjs/amino/build/coins.js
# +++ b/node_modules/@cosmjs/amino/build/coins.js
# @@ -1,6 +1,6 @@
#  "use strict";
#  Object.defineProperty(exports, "__esModule", { value: true });
# -exports.addCoins = exports.parseCoins = exports.coins = exports.coin = void 0;
# +exports.parseCoins = exports.coins = exports.coin = void 0;
#  const math_1 = require("@cosmjs/math");
#  /**
#   * Creates a coin.
# @@ -61,22 +61,10 @@ function parseCoins(input) {
#          if (!match)
#              throw new Error("Got an invalid coin string");
#          return {
# -            amount: match[1].replace(/^0+/, "") || "0",
# +            amount: math_1.Uint64.fromString(match[1]).toString(),
#              denom: match[2],
#          };
#      });
#  }
#  exports.parseCoins = parseCoins;
# -/**
# - * Function to sum up coins with type Coin
# - */
# -function addCoins(lhs, rhs) {
# -    if (lhs.denom !== rhs.denom)
# -        throw new Error("Trying to add two coins with different denoms");
# -    return {
# -        amount: math_1.Decimal.fromAtomics(lhs.amount, 0).plus(math_1.Decimal.fromAtomics(rhs.amount, 0)).atomics,
# -        denom: lhs.denom,
# -    };
# -}
# -exports.addCoins = addCoins;
#  //# sourceMappingURL=coins.js.map
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/coins.js.map b/node_modules/@cosmjs/amino/build/coins.js.map
# index 0be95ea..613fa59 100644
# --- a/node_modules/@cosmjs/amino/build/coins.js.map
# +++ b/node_modules/@cosmjs/amino/build/coins.js.map
# @@ -1 +1 @@
# -{"version":3,"file":"coins.js","sourceRoot":"","sources":["../src/coins.ts"],"names":[],"mappings":";;;AAAA,uCAA+C;AAO/C;;;;;;;;GAQG;AACH,SAAgB,IAAI,CAAC,MAAuB,EAAE,KAAa;IACzD,IAAI,SAAiB,CAAC;IACtB,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;QAC9B,IAAI;YACF,SAAS,GAAG,IAAI,aAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;SAC3C;QAAC,OAAO,IAAI,EAAE;YACb,MAAM,IAAI,KAAK,CACb,gHAAgH,CACjH,CAAC;SACH;KACF;SAAM;QACL,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;YAC7B,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;SAC3D;QACD,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC;KAC9C;IACD,OAAO;QACL,MAAM,EAAE,SAAS;QACjB,KAAK,EAAE,KAAK;KACb,CAAC;AACJ,CAAC;AApBD,oBAoBC;AAED;;GAEG;AACH,SAAgB,KAAK,CAAC,MAAuB,EAAE,KAAa;IAC1D,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/B,CAAC;AAFD,sBAEC;AAED;;;;;;;;;;GAUG;AACH,SAAgB,UAAU,CAAC,KAAa;IACtC,OAAO,KAAK;SACT,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;SAClB,KAAK,CAAC,GAAG,CAAC;SACV,MAAM,CAAC,OAAO,CAAC;SACf,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;QACZ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;QACjD,IAAI,CAAC,KAAK;YAAE,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;QAC1D,OAAO;YACL,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,GAAG;YAC1C,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;SAChB,CAAC;IACJ,CAAC,CAAC,CAAC;AACP,CAAC;AAbD,gCAaC;AAED;;GAEG;AACH,SAAgB,QAAQ,CAAC,GAAS,EAAE,GAAS;IAC3C,IAAI,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,KAAK;QAAE,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;IAC9F,OAAO;QACL,MAAM,EAAE,cAAO,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAO,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO;QAC3F,KAAK,EAAE,GAAG,CAAC,KAAK;KACjB,CAAC;AACJ,CAAC;AAND,4BAMC"}
# \ No newline at end of file
# +{"version":3,"file":"coins.js","sourceRoot":"","sources":["../src/coins.ts"],"names":[],"mappings":";;;AAAA,uCAA8C;AAO9C;;;;;;;;GAQG;AACH,SAAgB,IAAI,CAAC,MAAuB,EAAE,KAAa;IACzD,IAAI,SAAiB,CAAC;IACtB,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;QAC9B,IAAI;YACF,SAAS,GAAG,IAAI,aAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;SAC3C;QAAC,OAAO,IAAI,EAAE;YACb,MAAM,IAAI,KAAK,CACb,gHAAgH,CACjH,CAAC;SACH;KACF;SAAM;QACL,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;YAC7B,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;SAC3D;QACD,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC;KAC9C;IACD,OAAO;QACL,MAAM,EAAE,SAAS;QACjB,KAAK,EAAE,KAAK;KACb,CAAC;AACJ,CAAC;AApBD,oBAoBC;AAED;;GAEG;AACH,SAAgB,KAAK,CAAC,MAAuB,EAAE,KAAa;IAC1D,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/B,CAAC;AAFD,sBAEC;AAED;;;;;;;;;;GAUG;AACH,SAAgB,UAAU,CAAC,KAAa;IACtC,OAAO,KAAK;SACT,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;SAClB,KAAK,CAAC,GAAG,CAAC;SACV,MAAM,CAAC,OAAO,CAAC;SACf,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;QACZ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;QACjD,IAAI,CAAC,KAAK;YAAE,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;QAC1D,OAAO;YACL,MAAM,EAAE,aAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;YAC9C,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;SAChB,CAAC;IACJ,CAAC,CAAC,CAAC;AACP,CAAC;AAbD,gCAaC"}
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/coins.spec.d.ts b/node_modules/@cosmjs/amino/build/coins.spec.d.ts
# new file mode 100644
# index 0000000..cb0ff5c
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/coins.spec.d.ts
# @@ -0,0 +1 @@
# +export {};
# diff --git a/node_modules/@cosmjs/amino/build/coins.spec.js b/node_modules/@cosmjs/amino/build/coins.spec.js
# new file mode 100644
# index 0000000..eef045e
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/coins.spec.js
# @@ -0,0 +1,122 @@
# +"use strict";
# +Object.defineProperty(exports, "__esModule", { value: true });
# +const coins_1 = require("./coins");
# +describe("coins", () => {
# +    describe("coin", () => {
# +        it("works for number amounts", () => {
# +            expect((0, coins_1.coin)(123, "utoken")).toEqual({ amount: "123", denom: "utoken" });
# +            expect((0, coins_1.coin)(123.0, "utoken")).toEqual({ amount: "123", denom: "utoken" });
# +            expect((0, coins_1.coin)(Number.MAX_SAFE_INTEGER, "utoken")).toEqual({
# +                amount: "9007199254740991",
# +                denom: "utoken",
# +            });
# +            expect((0, coins_1.coin)(+0, "utoken")).toEqual({ amount: "0", denom: "utoken" });
# +            expect((0, coins_1.coin)(-0, "utoken")).toEqual({ amount: "0", denom: "utoken" });
# +        });
# +        it("throws for non-safe-integer values", () => {
# +            expect(() => (0, coins_1.coin)(1.23, "utoken")).toThrowError(/Given amount is not a safe integer/i);
# +            expect(() => (0, coins_1.coin)(NaN, "utoken")).toThrowError(/Given amount is not a safe integer/i);
# +            expect(() => (0, coins_1.coin)(Number.POSITIVE_INFINITY, "utoken")).toThrowError(/Given amount is not a safe integer/i);
# +            expect(() => (0, coins_1.coin)(Number.MAX_SAFE_INTEGER + 1, "utoken")).toThrowError(/Given amount is not a safe integer/i);
# +        });
# +        it("throws for negative values", () => {
# +            expect(() => (0, coins_1.coin)(-1, "utoken")).toThrowError(/Given amount is not a safe integer/i);
# +            expect(() => (0, coins_1.coin)(Number.MIN_SAFE_INTEGER, "utoken")).toThrowError(/Given amount is not a safe integer/i);
# +            expect(() => (0, coins_1.coin)(Number.NEGATIVE_INFINITY, "utoken")).toThrowError(/Given amount is not a safe integer/i);
# +        });
# +        it("works for string amounts", () => {
# +            expect((0, coins_1.coin)("0", "utoken")).toEqual({ amount: "0", denom: "utoken" });
# +            expect((0, coins_1.coin)("1", "utoken")).toEqual({ amount: "1", denom: "utoken" });
# +            expect((0, coins_1.coin)("00123", "utoken")).toEqual({ amount: "123", denom: "utoken" });
# +            expect((0, coins_1.coin)("12300", "utoken")).toEqual({ amount: "12300", denom: "utoken" });
# +            expect((0, coins_1.coin)("9007199254740992", "utoken")).toEqual({ amount: "9007199254740992", denom: "utoken" });
# +            // ETH supply (~118 mio ETH)
# +            expect((0, coins_1.coin)("118273505060000000000000000", "wei")).toEqual({
# +                amount: "118273505060000000000000000",
# +                denom: "wei",
# +            });
# +        });
# +        it("throws for invalid amount strings", () => {
# +            expect(() => (0, coins_1.coin)("-1", "utoken")).toThrowError(/Invalid unsigned integer string format/i);
# +            expect(() => (0, coins_1.coin)("0x01", "utoken")).toThrowError(/Invalid unsigned integer string format/i);
# +            expect(() => (0, coins_1.coin)("NaN", "utoken")).toThrowError(/Invalid unsigned integer string format/i);
# +            expect(() => (0, coins_1.coin)("1.0", "utoken")).toThrowError(/Invalid unsigned integer string format/i);
# +            expect(() => (0, coins_1.coin)("1 ", "utoken")).toThrowError(/Invalid unsigned integer string format/i);
# +            expect(() => (0, coins_1.coin)(" 1", "utoken")).toThrowError(/Invalid unsigned integer string format/i);
# +            expect(() => (0, coins_1.coin)("1.1827350506e+26", "utoken")).toThrowError(/Invalid unsigned integer string format/i);
# +        });
# +    });
# +    describe("coins", () => {
# +        it("returns one element array of coin", () => {
# +            expect((0, coins_1.coins)(123, "utoken")).toEqual([{ amount: "123", denom: "utoken" }]);
# +            expect((0, coins_1.coins)("123", "utoken")).toEqual([{ amount: "123", denom: "utoken" }]);
# +        });
# +    });
# +    describe("parseCoins", () => {
# +        it("works for empty", () => {
# +            expect((0, coins_1.parseCoins)("")).toEqual([]);
# +        });
# +        it("works for one element", () => {
# +            expect((0, coins_1.parseCoins)("7643ureef")).toEqual([
# +                {
# +                    amount: "7643",
# +                    denom: "ureef",
# +                },
# +            ]);
# +        });
# +        it("works for two", () => {
# +            expect((0, coins_1.parseCoins)("819966000ucosm,700000000ustake")).toEqual([
# +                {
# +                    amount: "819966000",
# +                    denom: "ucosm",
# +                },
# +                {
# +                    amount: "700000000",
# +                    denom: "ustake",
# +                },
# +            ]);
# +        });
# +        it("ignores empty elements", () => {
# +            // start
# +            expect((0, coins_1.parseCoins)(",819966000ucosm,700000000ustake")).toEqual([
# +                {
# +                    amount: "819966000",
# +                    denom: "ucosm",
# +                },
# +                {
# +                    amount: "700000000",
# +                    denom: "ustake",
# +                },
# +            ]);
# +            // middle
# +            expect((0, coins_1.parseCoins)("819966000ucosm,,700000000ustake")).toEqual([
# +                {
# +                    amount: "819966000",
# +                    denom: "ucosm",
# +                },
# +                {
# +                    amount: "700000000",
# +                    denom: "ustake",
# +                },
# +            ]);
# +            // end
# +            expect((0, coins_1.parseCoins)("819966000ucosm,700000000ustake,")).toEqual([
# +                {
# +                    amount: "819966000",
# +                    denom: "ucosm",
# +                },
# +                {
# +                    amount: "700000000",
# +                    denom: "ustake",
# +                },
# +            ]);
# +        });
# +        it("throws for invalid inputs", () => {
# +            // denom missing
# +            expect(() => (0, coins_1.parseCoins)("3456")).toThrowError(/invalid coin string/i);
# +            // amount missing
# +            expect(() => (0, coins_1.parseCoins)("ucosm")).toThrowError(/invalid coin string/i);
# +        });
# +    });
# +});
# +//# sourceMappingURL=coins.spec.js.map
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/coins.spec.js.map b/node_modules/@cosmjs/amino/build/coins.spec.js.map
# new file mode 100644
# index 0000000..f70d603
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/coins.spec.js.map
# @@ -0,0 +1 @@
# +{"version":3,"file":"coins.spec.js","sourceRoot":"","sources":["../src/coins.spec.ts"],"names":[],"mappings":"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"}
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/encoding.d.ts b/node_modules/@cosmjs/amino/build/encoding.d.ts
# index fc8b504..c6adf60 100644
# --- a/node_modules/@cosmjs/amino/build/encoding.d.ts
# +++ b/node_modules/@cosmjs/amino/build/encoding.d.ts
# @@ -1,14 +1,5 @@
# -import { Ed25519Pubkey, Pubkey, Secp256k1Pubkey } from "./pubkeys";
# -/**
# - * Takes a Secp256k1 public key as raw bytes and returns the Amino JSON
# - * representation of it (the type/value wrapper object).
# - */
# -export declare function encodeSecp256k1Pubkey(pubkey: Uint8Array): Secp256k1Pubkey;
# -/**
# - * Takes an Edd25519 public key as raw bytes and returns the Amino JSON
# - * representation of it (the type/value wrapper object).
# - */
# -export declare function encodeEd25519Pubkey(pubkey: Uint8Array): Ed25519Pubkey;
# +import { Pubkey, Secp256k1Pubkey } from "./pubkeys";
# +export declare function encodeSecp256k1Pubkey(pubkey: Uint8Array, urlType?: string): Secp256k1Pubkey;
#  /**
#   * Decodes a pubkey in the Amino binary format to a type/value object.
#   */
# diff --git a/node_modules/@cosmjs/amino/build/encoding.js b/node_modules/@cosmjs/amino/build/encoding.js
# index 477c250..a3894ab 100644
# --- a/node_modules/@cosmjs/amino/build/encoding.js
# +++ b/node_modules/@cosmjs/amino/build/encoding.js
# @@ -1,38 +1,21 @@
#  "use strict";
#  Object.defineProperty(exports, "__esModule", { value: true });
# -exports.encodeBech32Pubkey = exports.encodeAminoPubkey = exports.decodeBech32Pubkey = exports.decodeAminoPubkey = exports.encodeEd25519Pubkey = exports.encodeSecp256k1Pubkey = void 0;
# +exports.encodeBech32Pubkey = exports.encodeAminoPubkey = exports.decodeBech32Pubkey = exports.decodeAminoPubkey = exports.encodeSecp256k1Pubkey = void 0;
#  const encoding_1 = require("@cosmjs/encoding");
#  const math_1 = require("@cosmjs/math");
#  const utils_1 = require("@cosmjs/utils");
#  const pubkeys_1 = require("./pubkeys");
# -/**
# - * Takes a Secp256k1 public key as raw bytes and returns the Amino JSON
# - * representation of it (the type/value wrapper object).
# - */
# -function encodeSecp256k1Pubkey(pubkey) {
# +function encodeSecp256k1Pubkey(pubkey, urlType) {
#      if (pubkey.length !== 33 || (pubkey[0] !== 0x02 && pubkey[0] !== 0x03)) {
#          throw new Error("Public key must be compressed secp256k1, i.e. 33 bytes starting with 0x02 or 0x03");
#      }
# +    urlType = urlType ? urlType : pubkeys_1.pubkeyType.secp256k1;
#      return {
# -        type: pubkeys_1.pubkeyType.secp256k1,
# +        type: urlType,
#          value: (0, encoding_1.toBase64)(pubkey),
#      };
#  }
#  exports.encodeSecp256k1Pubkey = encodeSecp256k1Pubkey;
# -/**
# - * Takes an Edd25519 public key as raw bytes and returns the Amino JSON
# - * representation of it (the type/value wrapper object).
# - */
# -function encodeEd25519Pubkey(pubkey) {
# -    if (pubkey.length !== 32) {
# -        throw new Error("Ed25519 public key must be 32 bytes long");
# -    }
# -    return {
# -        type: pubkeys_1.pubkeyType.ed25519,
# -        value: (0, encoding_1.toBase64)(pubkey),
# -    };
# -}
# -exports.encodeEd25519Pubkey = encodeEd25519Pubkey;
#  // As discussed in https://github.com/binance-chain/javascript-sdk/issues/163
#  // Prefixes listed here: https://github.com/tendermint/tendermint/blob/d419fffe18531317c28c29a292ad7d253f6cafdf/docs/spec/blockchain/encoding.md#public-key-cryptography
#  // Last bytes is varint-encoded length prefix
# diff --git a/node_modules/@cosmjs/amino/build/encoding.js.map b/node_modules/@cosmjs/amino/build/encoding.js.map
# index cdfd2df..d7b3828 100644
# --- a/node_modules/@cosmjs/amino/build/encoding.js.map
# +++ b/node_modules/@cosmjs/amino/build/encoding.js.map
# @@ -1 +1 @@
# -{"version":3,"file":"encoding.js","sourceRoot":"","sources":["../src/encoding.ts"],"names":[],"mappings":"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"}
# \ No newline at end of file
# +{"version":3,"file":"encoding.js","sourceRoot":"","sources":["../src/encoding.ts"],"names":[],"mappings":"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"}
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/encoding.spec.d.ts b/node_modules/@cosmjs/amino/build/encoding.spec.d.ts
# new file mode 100644
# index 0000000..cb0ff5c
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/encoding.spec.d.ts
# @@ -0,0 +1 @@
# +export {};
# diff --git a/node_modules/@cosmjs/amino/build/encoding.spec.js b/node_modules/@cosmjs/amino/build/encoding.spec.js
# new file mode 100644
# index 0000000..7fd08d7
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/encoding.spec.js
# @@ -0,0 +1,158 @@
# +"use strict";
# +Object.defineProperty(exports, "__esModule", { value: true });
# +const encoding_1 = require("@cosmjs/encoding");
# +const encoding_2 = require("./encoding");
# +const testutils_spec_1 = require("./testutils.spec");
# +describe("encoding", () => {
# +    describe("encodeSecp256k1Pubkey", () => {
# +        it("encodes a compressed pubkey", () => {
# +            const pubkey = (0, encoding_1.fromBase64)("AtQaCqFnshaZQp6rIkvAPyzThvCvXSDO+9AzbxVErqJP");
# +            expect((0, encoding_2.encodeSecp256k1Pubkey)(pubkey)).toEqual({
# +                type: "tendermint/PubKeySecp256k1",
# +                value: "AtQaCqFnshaZQp6rIkvAPyzThvCvXSDO+9AzbxVErqJP",
# +            });
# +        });
# +        it("throws for uncompressed public keys", () => {
# +            const pubkey = (0, encoding_1.fromBase64)("BE8EGB7ro1ORuFhjOnZcSgwYlpe0DSFjVNUIkNNQxwKQE7WHpoHoNswYeoFkuYpYSKK4mzFzMV/dB0DVAy4lnNU=");
# +            expect(() => (0, encoding_2.encodeSecp256k1Pubkey)(pubkey)).toThrowError(/public key must be compressed secp256k1/i);
# +        });
# +    });
# +    describe("decodeAminoPubkey", () => {
# +        it("works for secp256k1", () => {
# +            const amino = (0, encoding_1.fromBech32)("cosmospub1addwnpepqd8sgxq7aw348ydctp3n5ajufgxp395hksxjzc6565yfp56scupfqhlgyg5").data;
# +            expect((0, encoding_2.decodeAminoPubkey)(amino)).toEqual({
# +                type: "tendermint/PubKeySecp256k1",
# +                value: "A08EGB7ro1ORuFhjOnZcSgwYlpe0DSFjVNUIkNNQxwKQ",
# +            });
# +        });
# +        it("works for ed25519", () => {
# +            // Encoded from `corald tendermint show-validator`
# +            // Decoded from http://localhost:26657/validators
# +            const amino = (0, encoding_1.fromBech32)("coralvalconspub1zcjduepqvxg72ccnl9r65fv0wn3amlk4sfzqfe2k36l073kjx2qyaf6sk23qw7j8wq").data;
# +            expect((0, encoding_2.decodeAminoPubkey)(amino)).toEqual({
# +                type: "tendermint/PubKeyEd25519",
# +                value: "YZHlYxP5R6olj3Tj3f7VgkQE5VaOvv9G0jKATqdQsqI=",
# +            });
# +        });
# +        it("works for sr25519", () => {
# +            pending("No test data available");
# +        });
# +        it("works for multisig", () => {
# +            const pubkeyData = (0, encoding_1.fromBech32)("cosmospub1addwnpepqd8sgxq7aw348ydctp3n5ajufgxp395hksxjzc6565yfp56scupfqhlgyg5").data;
# +            const pubkey = {
# +                type: "tendermint/PubKeySecp256k1",
# +                value: "A08EGB7ro1ORuFhjOnZcSgwYlpe0DSFjVNUIkNNQxwKQ",
# +            };
# +            const data1 = (0, encoding_1.fromHex)("22C1F7E20805");
# +            expect((0, encoding_2.decodeAminoPubkey)(data1)).toEqual({
# +                type: "tendermint/PubKeyMultisigThreshold",
# +                value: {
# +                    threshold: "5",
# +                    pubkeys: [],
# +                },
# +            });
# +            const data2 = Uint8Array.from([...(0, encoding_1.fromHex)("22C1F7E2081a"), 0x12, pubkeyData.length, ...pubkeyData]);
# +            expect((0, encoding_2.decodeAminoPubkey)(data2)).toEqual({
# +                type: "tendermint/PubKeyMultisigThreshold",
# +                value: {
# +                    threshold: "26",
# +                    pubkeys: [pubkey],
# +                },
# +            });
# +            const data3 = Uint8Array.from([
# +                ...(0, encoding_1.fromHex)("22C1F7E2081a"),
# +                0x12,
# +                pubkeyData.length,
# +                ...pubkeyData,
# +                0x12,
# +                pubkeyData.length,
# +                ...pubkeyData,
# +            ]);
# +            expect((0, encoding_2.decodeAminoPubkey)(data3)).toEqual({
# +                type: "tendermint/PubKeyMultisigThreshold",
# +                value: {
# +                    threshold: "26",
# +                    pubkeys: [pubkey, pubkey],
# +                },
# +            });
# +            expect(() => (0, encoding_2.decodeAminoPubkey)((0, encoding_1.fromHex)("22C1F7E20705"))).toThrowError(/expecting 0x08 prefix/i);
# +        });
# +    });
# +    describe("decodeBech32Pubkey", () => {
# +        it("works", () => {
# +            expect((0, encoding_2.decodeBech32Pubkey)("cosmospub1addwnpepqd8sgxq7aw348ydctp3n5ajufgxp395hksxjzc6565yfp56scupfqhlgyg5")).toEqual({
# +                type: "tendermint/PubKeySecp256k1",
# +                value: "A08EGB7ro1ORuFhjOnZcSgwYlpe0DSFjVNUIkNNQxwKQ",
# +            });
# +        });
# +        it("works for enigma pubkey", () => {
# +            expect((0, encoding_2.decodeBech32Pubkey)("enigmapub1addwnpepqw5k9p439nw0zpg2aundx4umwx4nw233z5prpjqjv5anl5grmnchzp2xwvv")).toEqual({
# +                type: "tendermint/PubKeySecp256k1",
# +                value: "A6lihrEs3PEFCu8m01ebcas3KjEVAjDIEmU7P9ED3PFx",
# +            });
# +        });
# +        it("works for ed25519", () => {
# +            // Encoded from `corald tendermint show-validator`
# +            // Decoded from http://localhost:26657/validators
# +            const decoded = (0, encoding_2.decodeBech32Pubkey)("coralvalconspub1zcjduepqvxg72ccnl9r65fv0wn3amlk4sfzqfe2k36l073kjx2qyaf6sk23qw7j8wq");
# +            expect(decoded).toEqual({
# +                type: "tendermint/PubKeyEd25519",
# +                value: "YZHlYxP5R6olj3Tj3f7VgkQE5VaOvv9G0jKATqdQsqI=",
# +            });
# +        });
# +        it("works for multisig", () => {
# +            expect((0, encoding_2.decodeBech32Pubkey)(testutils_spec_1.testgroup1PubkeyBech32)).toEqual(testutils_spec_1.testgroup1);
# +            expect((0, encoding_2.decodeBech32Pubkey)(testutils_spec_1.testgroup2PubkeyBech32)).toEqual(testutils_spec_1.testgroup2);
# +            expect((0, encoding_2.decodeBech32Pubkey)(testutils_spec_1.testgroup3PubkeyBech32)).toEqual(testutils_spec_1.testgroup3);
# +        });
# +    });
# +    describe("encodeAminoPubkey", () => {
# +        it("works for secp256k1", () => {
# +            const pubkey = {
# +                type: "tendermint/PubKeySecp256k1",
# +                value: "A08EGB7ro1ORuFhjOnZcSgwYlpe0DSFjVNUIkNNQxwKQ",
# +            };
# +            const expected = (0, encoding_1.fromBech32)("cosmospub1addwnpepqd8sgxq7aw348ydctp3n5ajufgxp395hksxjzc6565yfp56scupfqhlgyg5").data;
# +            expect((0, encoding_2.encodeAminoPubkey)(pubkey)).toEqual(expected);
# +        });
# +        it("works for ed25519", () => {
# +            // Decoded from http://localhost:26657/validators
# +            // Encoded from `corald tendermint show-validator`
# +            const pubkey = {
# +                type: "tendermint/PubKeyEd25519",
# +                value: "YZHlYxP5R6olj3Tj3f7VgkQE5VaOvv9G0jKATqdQsqI=",
# +            };
# +            const expected = (0, encoding_1.fromBech32)("coralvalconspub1zcjduepqvxg72ccnl9r65fv0wn3amlk4sfzqfe2k36l073kjx2qyaf6sk23qw7j8wq").data;
# +            expect((0, encoding_2.encodeAminoPubkey)(pubkey)).toEqual(expected);
# +        });
# +    });
# +    describe("encodeBech32Pubkey", () => {
# +        it("works for secp256k1", () => {
# +            const pubkey = {
# +                type: "tendermint/PubKeySecp256k1",
# +                value: "A08EGB7ro1ORuFhjOnZcSgwYlpe0DSFjVNUIkNNQxwKQ",
# +            };
# +            expect((0, encoding_2.encodeBech32Pubkey)(pubkey, "cosmospub")).toEqual("cosmospub1addwnpepqd8sgxq7aw348ydctp3n5ajufgxp395hksxjzc6565yfp56scupfqhlgyg5");
# +        });
# +        it("works for ed25519", () => {
# +            // Decoded from http://localhost:26657/validators
# +            // Encoded from `corald tendermint show-validator`
# +            const pubkey = {
# +                type: "tendermint/PubKeyEd25519",
# +                value: "YZHlYxP5R6olj3Tj3f7VgkQE5VaOvv9G0jKATqdQsqI=",
# +            };
# +            expect((0, encoding_2.encodeBech32Pubkey)(pubkey, "coralvalconspub")).toEqual("coralvalconspub1zcjduepqvxg72ccnl9r65fv0wn3amlk4sfzqfe2k36l073kjx2qyaf6sk23qw7j8wq");
# +        });
# +        it("works for multisig", () => {
# +            const expected1 = (0, encoding_1.fromBech32)(testutils_spec_1.testgroup1PubkeyBech32).data;
# +            expect((0, encoding_2.encodeAminoPubkey)(testutils_spec_1.testgroup1)).toEqual(expected1);
# +            const expected2 = (0, encoding_1.fromBech32)(testutils_spec_1.testgroup2PubkeyBech32).data;
# +            expect((0, encoding_2.encodeAminoPubkey)(testutils_spec_1.testgroup2)).toEqual(expected2);
# +            const expected3 = (0, encoding_1.fromBech32)(testutils_spec_1.testgroup3PubkeyBech32).data;
# +            expect((0, encoding_2.encodeAminoPubkey)(testutils_spec_1.testgroup3)).toEqual(expected3);
# +            const expected4 = (0, encoding_1.fromBech32)(testutils_spec_1.testgroup4PubkeyBech32).data;
# +            expect((0, encoding_2.encodeAminoPubkey)(testutils_spec_1.testgroup4)).toEqual(expected4);
# +        });
# +    });
# +});
# +//# sourceMappingURL=encoding.spec.js.map
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/encoding.spec.js.map b/node_modules/@cosmjs/amino/build/encoding.spec.js.map
# new file mode 100644
# index 0000000..1f84c8b
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/encoding.spec.js.map
# @@ -0,0 +1 @@
# +{"version":3,"file":"encoding.spec.js","sourceRoot":"","sources":["../src/encoding.spec.ts"],"names":[],"mappings":"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"}
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/index.d.ts b/node_modules/@cosmjs/amino/build/index.d.ts
# index 4829bb7..c1ae8aa 100644
# --- a/node_modules/@cosmjs/amino/build/index.d.ts
# +++ b/node_modules/@cosmjs/amino/build/index.d.ts
# @@ -1,6 +1,6 @@
#  export { pubkeyToAddress, pubkeyToRawAddress, rawEd25519PubkeyToRawAddress, rawSecp256k1PubkeyToRawAddress, } from "./addresses";
# -export { addCoins, Coin, coin, coins, parseCoins } from "./coins";
# -export { decodeAminoPubkey, decodeBech32Pubkey, encodeAminoPubkey, encodeBech32Pubkey, encodeEd25519Pubkey, encodeSecp256k1Pubkey, } from "./encoding";
# +export { Coin, coin, coins, parseCoins } from "./coins";
# +export { decodeAminoPubkey, decodeBech32Pubkey, encodeAminoPubkey, encodeBech32Pubkey, encodeSecp256k1Pubkey, } from "./encoding";
#  export { createMultisigThresholdPubkey } from "./multisig";
#  export { makeCosmoshubPath } from "./paths";
#  export { Ed25519Pubkey, isEd25519Pubkey, isMultisigThresholdPubkey, isSecp256k1Pubkey, isSinglePubkey, MultisigThresholdPubkey, Pubkey, pubkeyType, Secp256k1Pubkey, SinglePubkey, } from "./pubkeys";
# diff --git a/node_modules/@cosmjs/amino/build/index.js b/node_modules/@cosmjs/amino/build/index.js
# index be3bd91..7b2f635 100644
# --- a/node_modules/@cosmjs/amino/build/index.js
# +++ b/node_modules/@cosmjs/amino/build/index.js
# @@ -1,13 +1,12 @@
#  "use strict";
#  Object.defineProperty(exports, "__esModule", { value: true });
# -exports.executeKdf = exports.makeStdTx = exports.isStdTx = exports.serializeSignDoc = exports.makeSignDoc = exports.encodeSecp256k1Signature = exports.decodeSignature = exports.Secp256k1Wallet = exports.Secp256k1HdWallet = exports.extractKdfConfiguration = exports.pubkeyType = exports.isSinglePubkey = exports.isSecp256k1Pubkey = exports.isMultisigThresholdPubkey = exports.isEd25519Pubkey = exports.makeCosmoshubPath = exports.createMultisigThresholdPubkey = exports.encodeSecp256k1Pubkey = exports.encodeEd25519Pubkey = exports.encodeBech32Pubkey = exports.encodeAminoPubkey = exports.decodeBech32Pubkey = exports.decodeAminoPubkey = exports.parseCoins = exports.coins = exports.coin = exports.addCoins = exports.rawSecp256k1PubkeyToRawAddress = exports.rawEd25519PubkeyToRawAddress = exports.pubkeyToRawAddress = exports.pubkeyToAddress = void 0;
# +exports.executeKdf = exports.makeStdTx = exports.isStdTx = exports.serializeSignDoc = exports.makeSignDoc = exports.encodeSecp256k1Signature = exports.decodeSignature = exports.Secp256k1Wallet = exports.Secp256k1HdWallet = exports.extractKdfConfiguration = exports.pubkeyType = exports.isSinglePubkey = exports.isSecp256k1Pubkey = exports.isMultisigThresholdPubkey = exports.isEd25519Pubkey = exports.makeCosmoshubPath = exports.createMultisigThresholdPubkey = exports.encodeSecp256k1Pubkey = exports.encodeBech32Pubkey = exports.encodeAminoPubkey = exports.decodeBech32Pubkey = exports.decodeAminoPubkey = exports.parseCoins = exports.coins = exports.coin = exports.rawSecp256k1PubkeyToRawAddress = exports.rawEd25519PubkeyToRawAddress = exports.pubkeyToRawAddress = exports.pubkeyToAddress = void 0;
#  var addresses_1 = require("./addresses");
#  Object.defineProperty(exports, "pubkeyToAddress", { enumerable: true, get: function () { return addresses_1.pubkeyToAddress; } });
#  Object.defineProperty(exports, "pubkeyToRawAddress", { enumerable: true, get: function () { return addresses_1.pubkeyToRawAddress; } });
#  Object.defineProperty(exports, "rawEd25519PubkeyToRawAddress", { enumerable: true, get: function () { return addresses_1.rawEd25519PubkeyToRawAddress; } });
#  Object.defineProperty(exports, "rawSecp256k1PubkeyToRawAddress", { enumerable: true, get: function () { return addresses_1.rawSecp256k1PubkeyToRawAddress; } });
#  var coins_1 = require("./coins");
# -Object.defineProperty(exports, "addCoins", { enumerable: true, get: function () { return coins_1.addCoins; } });
#  Object.defineProperty(exports, "coin", { enumerable: true, get: function () { return coins_1.coin; } });
#  Object.defineProperty(exports, "coins", { enumerable: true, get: function () { return coins_1.coins; } });
#  Object.defineProperty(exports, "parseCoins", { enumerable: true, get: function () { return coins_1.parseCoins; } });
# @@ -16,7 +15,6 @@ Object.defineProperty(exports, "decodeAminoPubkey", { enumerable: true, get: fun
#  Object.defineProperty(exports, "decodeBech32Pubkey", { enumerable: true, get: function () { return encoding_1.decodeBech32Pubkey; } });
#  Object.defineProperty(exports, "encodeAminoPubkey", { enumerable: true, get: function () { return encoding_1.encodeAminoPubkey; } });
#  Object.defineProperty(exports, "encodeBech32Pubkey", { enumerable: true, get: function () { return encoding_1.encodeBech32Pubkey; } });
# -Object.defineProperty(exports, "encodeEd25519Pubkey", { enumerable: true, get: function () { return encoding_1.encodeEd25519Pubkey; } });
#  Object.defineProperty(exports, "encodeSecp256k1Pubkey", { enumerable: true, get: function () { return encoding_1.encodeSecp256k1Pubkey; } });
#  var multisig_1 = require("./multisig");
#  Object.defineProperty(exports, "createMultisigThresholdPubkey", { enumerable: true, get: function () { return multisig_1.createMultisigThresholdPubkey; } });
# diff --git a/node_modules/@cosmjs/amino/build/index.js.map b/node_modules/@cosmjs/amino/build/index.js.map
# index 3452c3e..c456719 100644
# --- a/node_modules/@cosmjs/amino/build/index.js.map
# +++ b/node_modules/@cosmjs/amino/build/index.js.map
# @@ -1 +1 @@
# -{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;AAAA,yCAKqB;AAJnB,4GAAA,eAAe,OAAA;AACf,+GAAA,kBAAkB,OAAA;AAClB,yHAAA,4BAA4B,OAAA;AAC5B,2HAAA,8BAA8B,OAAA;AAEhC,iCAAkE;AAAzD,iGAAA,QAAQ,OAAA;AAAQ,6FAAA,IAAI,OAAA;AAAE,8FAAA,KAAK,OAAA;AAAE,mGAAA,UAAU,OAAA;AAChD,uCAOoB;AANlB,6GAAA,iBAAiB,OAAA;AACjB,8GAAA,kBAAkB,OAAA;AAClB,6GAAA,iBAAiB,OAAA;AACjB,8GAAA,kBAAkB,OAAA;AAClB,+GAAA,mBAAmB,OAAA;AACnB,iHAAA,qBAAqB,OAAA;AAEvB,uCAA2D;AAAlD,yHAAA,6BAA6B,OAAA;AACtC,iCAA4C;AAAnC,0GAAA,iBAAiB,OAAA;AAC1B,qCAWmB;AATjB,0GAAA,eAAe,OAAA;AACf,oHAAA,yBAAyB,OAAA;AACzB,4GAAA,iBAAiB,OAAA;AACjB,yGAAA,cAAc,OAAA;AAGd,qGAAA,UAAU,OAAA;AAIZ,yDAA2G;AAAlG,4HAAA,uBAAuB,OAAA;AAAE,sHAAA,iBAAiB,OAAA;AACnD,qDAAoD;AAA3C,kHAAA,eAAe,OAAA;AACxB,yCAAsF;AAA7E,4GAAA,eAAe,OAAA;AAAE,qHAAA,wBAAwB,OAAA;AAClD,qCAAwF;AAArE,sGAAA,WAAW,OAAA;AAAE,2GAAA,gBAAgB,OAAA;AAEhD,iCAAoD;AAA3C,gGAAA,OAAO,OAAA;AAAE,kGAAA,SAAS,OAAA;AAC3B,mCAAwD;AAA/C,oGAAA,UAAU,OAAA"}
# \ No newline at end of file
# +{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;AAAA,yCAKqB;AAJnB,4GAAA,eAAe,OAAA;AACf,+GAAA,kBAAkB,OAAA;AAClB,yHAAA,4BAA4B,OAAA;AAC5B,2HAAA,8BAA8B,OAAA;AAEhC,iCAAwD;AAAzC,6FAAA,IAAI,OAAA;AAAE,8FAAA,KAAK,OAAA;AAAE,mGAAA,UAAU,OAAA;AACtC,uCAMoB;AALlB,6GAAA,iBAAiB,OAAA;AACjB,8GAAA,kBAAkB,OAAA;AAClB,6GAAA,iBAAiB,OAAA;AACjB,8GAAA,kBAAkB,OAAA;AAClB,iHAAA,qBAAqB,OAAA;AAEvB,uCAA2D;AAAlD,yHAAA,6BAA6B,OAAA;AACtC,iCAA4C;AAAnC,0GAAA,iBAAiB,OAAA;AAC1B,qCAWmB;AATjB,0GAAA,eAAe,OAAA;AACf,oHAAA,yBAAyB,OAAA;AACzB,4GAAA,iBAAiB,OAAA;AACjB,yGAAA,cAAc,OAAA;AAGd,qGAAA,UAAU,OAAA;AAIZ,yDAA2G;AAAlG,4HAAA,uBAAuB,OAAA;AAAE,sHAAA,iBAAiB,OAAA;AACnD,qDAAoD;AAA3C,kHAAA,eAAe,OAAA;AACxB,yCAAsF;AAA7E,4GAAA,eAAe,OAAA;AAAE,qHAAA,wBAAwB,OAAA;AAClD,qCAAwF;AAArE,sGAAA,WAAW,OAAA;AAAE,2GAAA,gBAAgB,OAAA;AAEhD,iCAAoD;AAA3C,gGAAA,OAAO,OAAA;AAAE,kGAAA,SAAS,OAAA;AAC3B,mCAAwD;AAA/C,oGAAA,UAAU,OAAA"}
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/multisig.spec.d.ts b/node_modules/@cosmjs/amino/build/multisig.spec.d.ts
# new file mode 100644
# index 0000000..cb0ff5c
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/multisig.spec.d.ts
# @@ -0,0 +1 @@
# +export {};
# diff --git a/node_modules/@cosmjs/amino/build/multisig.spec.js b/node_modules/@cosmjs/amino/build/multisig.spec.js
# new file mode 100644
# index 0000000..d86c2be
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/multisig.spec.js
# @@ -0,0 +1,71 @@
# +"use strict";
# +Object.defineProperty(exports, "__esModule", { value: true });
# +const multisig_1 = require("./multisig");
# +const testutils_spec_1 = require("./testutils.spec");
# +describe("multisig", () => {
# +    describe("compareArrays", () => {
# +        it("return 0 for equal arrays", () => {
# +            expect((0, multisig_1.compareArrays)(new Uint8Array([]), new Uint8Array([]))).toEqual(0);
# +            expect((0, multisig_1.compareArrays)(new Uint8Array([1]), new Uint8Array([1]))).toEqual(0);
# +            expect((0, multisig_1.compareArrays)(new Uint8Array([3, 2, 1]), new Uint8Array([3, 2, 1]))).toEqual(0);
# +        });
# +        it("return > 0 for left > right", () => {
# +            expect((0, multisig_1.compareArrays)(new Uint8Array([5, 5, 5]), new Uint8Array([5, 5, 4]))).toBeGreaterThan(0);
# +            expect((0, multisig_1.compareArrays)(new Uint8Array([5, 5, 5]), new Uint8Array([5, 4, 5]))).toBeGreaterThan(0);
# +            expect((0, multisig_1.compareArrays)(new Uint8Array([5, 5, 5]), new Uint8Array([4, 5, 5]))).toBeGreaterThan(0);
# +            expect((0, multisig_1.compareArrays)(new Uint8Array([5, 5, 5]), new Uint8Array([5, 5]))).toBeGreaterThan(0);
# +            expect((0, multisig_1.compareArrays)(new Uint8Array([5, 5, 5]), new Uint8Array([5]))).toBeGreaterThan(0);
# +            expect((0, multisig_1.compareArrays)(new Uint8Array([5, 5, 5]), new Uint8Array([]))).toBeGreaterThan(0);
# +            // left or right precedence
# +            expect((0, multisig_1.compareArrays)(new Uint8Array([5, 5, 4]), new Uint8Array([4, 5, 5]))).toBeGreaterThan(0);
# +            // magnitude is more important than length
# +            expect((0, multisig_1.compareArrays)(new Uint8Array([6]), new Uint8Array([5, 5]))).toBeGreaterThan(0);
# +        });
# +        it("return < 0 for left < right", () => {
# +            expect((0, multisig_1.compareArrays)(new Uint8Array([5, 5, 4]), new Uint8Array([5, 5, 5]))).toBeLessThan(0);
# +            expect((0, multisig_1.compareArrays)(new Uint8Array([5, 4, 5]), new Uint8Array([5, 5, 5]))).toBeLessThan(0);
# +            expect((0, multisig_1.compareArrays)(new Uint8Array([4, 5, 5]), new Uint8Array([5, 5, 5]))).toBeLessThan(0);
# +            expect((0, multisig_1.compareArrays)(new Uint8Array([5, 5]), new Uint8Array([5, 5, 5]))).toBeLessThan(0);
# +            expect((0, multisig_1.compareArrays)(new Uint8Array([5]), new Uint8Array([5, 5, 5]))).toBeLessThan(0);
# +            expect((0, multisig_1.compareArrays)(new Uint8Array([]), new Uint8Array([5, 5, 5]))).toBeLessThan(0);
# +            // left or right precedence
# +            expect((0, multisig_1.compareArrays)(new Uint8Array([4, 5, 5]), new Uint8Array([5, 5, 4]))).toBeLessThan(0);
# +            // magnitude is more important than length
# +            expect((0, multisig_1.compareArrays)(new Uint8Array([5, 5]), new Uint8Array([6]))).toBeLessThan(0);
# +        });
# +        it("can be used with sort", () => {
# +            const values = [
# +                new Uint8Array([2]),
# +                new Uint8Array([1]),
# +                new Uint8Array([2, 5]),
# +                new Uint8Array([3]),
# +                new Uint8Array([]),
# +            ].sort(multisig_1.compareArrays);
# +            expect(values).toEqual([
# +                new Uint8Array([]),
# +                new Uint8Array([1]),
# +                new Uint8Array([2]),
# +                new Uint8Array([2, 5]),
# +                new Uint8Array([3]),
# +            ]);
# +        });
# +    });
# +    describe("MultisigThresholdPubkey", () => {
# +        it("works with sorting", () => {
# +            expect((0, multisig_1.createMultisigThresholdPubkey)([testutils_spec_1.test1, testutils_spec_1.test2, testutils_spec_1.test3], 2)).toEqual(testutils_spec_1.testgroup1);
# +            expect((0, multisig_1.createMultisigThresholdPubkey)([testutils_spec_1.test1, testutils_spec_1.test2, testutils_spec_1.test3], 1)).toEqual(testutils_spec_1.testgroup2);
# +            expect((0, multisig_1.createMultisigThresholdPubkey)([testutils_spec_1.test3, testutils_spec_1.test1], 2)).toEqual(testutils_spec_1.testgroup3);
# +            expect((0, multisig_1.createMultisigThresholdPubkey)([testutils_spec_1.test1, testutils_spec_1.test2, testutils_spec_1.test3], 2, false)).toEqual(testutils_spec_1.testgroup1);
# +            expect((0, multisig_1.createMultisigThresholdPubkey)([testutils_spec_1.test1, testutils_spec_1.test2, testutils_spec_1.test3], 1, false)).toEqual(testutils_spec_1.testgroup2);
# +            expect((0, multisig_1.createMultisigThresholdPubkey)([testutils_spec_1.test3, testutils_spec_1.test1], 2, false)).toEqual(testutils_spec_1.testgroup3);
# +        });
# +        it("works with nosort", () => {
# +            expect((0, multisig_1.createMultisigThresholdPubkey)([testutils_spec_1.test3, testutils_spec_1.test1], 2, true)).toEqual(testutils_spec_1.testgroup4);
# +        });
# +        it("throws for threshold larger than number of keys", () => {
# +            expect(() => (0, multisig_1.createMultisigThresholdPubkey)([testutils_spec_1.test1, testutils_spec_1.test2, testutils_spec_1.test3], 4)).toThrowError(/threshold k = 4 exceeds number of keys n = 3/i);
# +            expect(() => (0, multisig_1.createMultisigThresholdPubkey)([testutils_spec_1.test1, testutils_spec_1.test2, testutils_spec_1.test3], 75)).toThrowError(/threshold k = 75 exceeds number of keys n = 3/i);
# +        });
# +    });
# +});
# +//# sourceMappingURL=multisig.spec.js.map
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/multisig.spec.js.map b/node_modules/@cosmjs/amino/build/multisig.spec.js.map
# new file mode 100644
# index 0000000..156df02
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/multisig.spec.js.map
# @@ -0,0 +1 @@
# +{"version":3,"file":"multisig.spec.js","sourceRoot":"","sources":["../src/multisig.spec.ts"],"names":[],"mappings":";;AAAA,yCAA0E;AAC1E,qDAAuG;AAEvG,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;IACxB,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,EAAE,CAAC,2BAA2B,EAAE,GAAG,EAAE;YACnC,MAAM,CAAC,IAAA,wBAAa,EAAC,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACzE,MAAM,CAAC,IAAA,wBAAa,EAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC3E,MAAM,CAAC,IAAA,wBAAa,EAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACzF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6BAA6B,EAAE,GAAG,EAAE;YACrC,MAAM,CAAC,IAAA,wBAAa,EAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC/F,MAAM,CAAC,IAAA,wBAAa,EAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC/F,MAAM,CAAC,IAAA,wBAAa,EAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC/F,MAAM,CAAC,IAAA,wBAAa,EAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC5F,MAAM,CAAC,IAAA,wBAAa,EAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YACzF,MAAM,CAAC,IAAA,wBAAa,EAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAExF,2BAA2B;YAC3B,MAAM,CAAC,IAAA,wBAAa,EAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAE/F,0CAA0C;YAC1C,MAAM,CAAC,IAAA,wBAAa,EAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QACxF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6BAA6B,EAAE,GAAG,EAAE;YACrC,MAAM,CAAC,IAAA,wBAAa,EAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC5F,MAAM,CAAC,IAAA,wBAAa,EAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC5F,MAAM,CAAC,IAAA,wBAAa,EAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC5F,MAAM,CAAC,IAAA,wBAAa,EAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACzF,MAAM,CAAC,IAAA,wBAAa,EAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,IAAA,wBAAa,EAAC,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAErF,2BAA2B;YAC3B,MAAM,CAAC,IAAA,wBAAa,EAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAE5F,0CAA0C;YAC1C,MAAM,CAAC,IAAA,wBAAa,EAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uBAAuB,EAAE,GAAG,EAAE;YAC/B,MAAM,MAAM,GAAG;gBACb,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnB,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnB,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACtB,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnB,IAAI,UAAU,CAAC,EAAE,CAAC;aACnB,CAAC,IAAI,CAAC,wBAAa,CAAC,CAAC;YACtB,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC;gBACrB,IAAI,UAAU,CAAC,EAAE,CAAC;gBAClB,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnB,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnB,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACtB,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;aACpB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACvC,EAAE,CAAC,oBAAoB,EAAE,GAAG,EAAE;YAC5B,MAAM,CAAC,IAAA,wCAA6B,EAAC,CAAC,sBAAK,EAAE,sBAAK,EAAE,sBAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,2BAAU,CAAC,CAAC;YACpF,MAAM,CAAC,IAAA,wCAA6B,EAAC,CAAC,sBAAK,EAAE,sBAAK,EAAE,sBAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,2BAAU,CAAC,CAAC;YACpF,MAAM,CAAC,IAAA,wCAA6B,EAAC,CAAC,sBAAK,EAAE,sBAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,2BAAU,CAAC,CAAC;YAE7E,MAAM,CAAC,IAAA,wCAA6B,EAAC,CAAC,sBAAK,EAAE,sBAAK,EAAE,sBAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,2BAAU,CAAC,CAAC;YAC3F,MAAM,CAAC,IAAA,wCAA6B,EAAC,CAAC,sBAAK,EAAE,sBAAK,EAAE,sBAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,2BAAU,CAAC,CAAC;YAC3F,MAAM,CAAC,IAAA,wCAA6B,EAAC,CAAC,sBAAK,EAAE,sBAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,2BAAU,CAAC,CAAC;QACtF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;YAC3B,MAAM,CAAC,IAAA,wCAA6B,EAAC,CAAC,sBAAK,EAAE,sBAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,2BAAU,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iDAAiD,EAAE,GAAG,EAAE;YACzD,MAAM,CAAC,GAAG,EAAE,CAAC,IAAA,wCAA6B,EAAC,CAAC,sBAAK,EAAE,sBAAK,EAAE,sBAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,YAAY,CAChF,+CAA+C,CAChD,CAAC;YACF,MAAM,CAAC,GAAG,EAAE,CAAC,IAAA,wCAA6B,EAAC,CAAC,sBAAK,EAAE,sBAAK,EAAE,sBAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,YAAY,CACjF,gDAAgD,CACjD,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC"}
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/paths.spec.d.ts b/node_modules/@cosmjs/amino/build/paths.spec.d.ts
# new file mode 100644
# index 0000000..cb0ff5c
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/paths.spec.d.ts
# @@ -0,0 +1 @@
# +export {};
# diff --git a/node_modules/@cosmjs/amino/build/paths.spec.js b/node_modules/@cosmjs/amino/build/paths.spec.js
# new file mode 100644
# index 0000000..f1493d8
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/paths.spec.js
# @@ -0,0 +1,27 @@
# +"use strict";
# +Object.defineProperty(exports, "__esModule", { value: true });
# +const crypto_1 = require("@cosmjs/crypto");
# +const paths_1 = require("./paths");
# +describe("paths", () => {
# +    describe("makeCosmoshubPath", () => {
# +        it("works", () => {
# +            // m/44'/118'/0'/0/0
# +            expect((0, paths_1.makeCosmoshubPath)(0)).toEqual([
# +                crypto_1.Slip10RawIndex.hardened(44),
# +                crypto_1.Slip10RawIndex.hardened(118),
# +                crypto_1.Slip10RawIndex.hardened(0),
# +                crypto_1.Slip10RawIndex.normal(0),
# +                crypto_1.Slip10RawIndex.normal(0),
# +            ]);
# +            // m/44'/118'/0'/0/123
# +            expect((0, paths_1.makeCosmoshubPath)(123)).toEqual([
# +                crypto_1.Slip10RawIndex.hardened(44),
# +                crypto_1.Slip10RawIndex.hardened(118),
# +                crypto_1.Slip10RawIndex.hardened(0),
# +                crypto_1.Slip10RawIndex.normal(0),
# +                crypto_1.Slip10RawIndex.normal(123),
# +            ]);
# +        });
# +    });
# +});
# +//# sourceMappingURL=paths.spec.js.map
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/paths.spec.js.map b/node_modules/@cosmjs/amino/build/paths.spec.js.map
# new file mode 100644
# index 0000000..e6d0e5a
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/paths.spec.js.map
# @@ -0,0 +1 @@
# +{"version":3,"file":"paths.spec.js","sourceRoot":"","sources":["../src/paths.spec.ts"],"names":[],"mappings":";;AAAA,2CAAgD;AAEhD,mCAA4C;AAE5C,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE;IACrB,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;QACjC,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE;YACf,oBAAoB;YACpB,MAAM,CAAC,IAAA,yBAAiB,EAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBACnC,uBAAc,CAAC,QAAQ,CAAC,EAAE,CAAC;gBAC3B,uBAAc,CAAC,QAAQ,CAAC,GAAG,CAAC;gBAC5B,uBAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC1B,uBAAc,CAAC,MAAM,CAAC,CAAC,CAAC;gBACxB,uBAAc,CAAC,MAAM,CAAC,CAAC,CAAC;aACzB,CAAC,CAAC;YACH,sBAAsB;YACtB,MAAM,CAAC,IAAA,yBAAiB,EAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC;gBACrC,uBAAc,CAAC,QAAQ,CAAC,EAAE,CAAC;gBAC3B,uBAAc,CAAC,QAAQ,CAAC,GAAG,CAAC;gBAC5B,uBAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC1B,uBAAc,CAAC,MAAM,CAAC,CAAC,CAAC;gBACxB,uBAAc,CAAC,MAAM,CAAC,GAAG,CAAC;aAC3B,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC"}
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/pubkeys.d.ts b/node_modules/@cosmjs/amino/build/pubkeys.d.ts
# index 8fa8fa5..de20ec1 100644
# --- a/node_modules/@cosmjs/amino/build/pubkeys.d.ts
# +++ b/node_modules/@cosmjs/amino/build/pubkeys.d.ts
# @@ -8,7 +8,7 @@ export interface Ed25519Pubkey extends SinglePubkey {
#  }
#  export declare function isEd25519Pubkey(pubkey: Pubkey): pubkey is Ed25519Pubkey;
#  export interface Secp256k1Pubkey extends SinglePubkey {
# -    readonly type: "tendermint/PubKeySecp256k1";
# +    readonly type: string;
#      readonly value: string;
#  }
#  export declare function isSecp256k1Pubkey(pubkey: Pubkey): pubkey is Secp256k1Pubkey;
# diff --git a/node_modules/@cosmjs/amino/build/pubkeys.spec.d.ts b/node_modules/@cosmjs/amino/build/pubkeys.spec.d.ts
# new file mode 100644
# index 0000000..cb0ff5c
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/pubkeys.spec.d.ts
# @@ -0,0 +1 @@
# +export {};
# diff --git a/node_modules/@cosmjs/amino/build/pubkeys.spec.js b/node_modules/@cosmjs/amino/build/pubkeys.spec.js
# new file mode 100644
# index 0000000..52e8204
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/pubkeys.spec.js
# @@ -0,0 +1,52 @@
# +"use strict";
# +Object.defineProperty(exports, "__esModule", { value: true });
# +const pubkeys_1 = require("./pubkeys");
# +describe("pubkeys", () => {
# +    const pubkeyEd25519 = {
# +        type: "tendermint/PubKeyEd25519",
# +        value: "YZHlYxP5R6olj3Tj3f7VgkQE5VaOvv9G0jKATqdQsqI=",
# +    };
# +    const pubkeySecp256k1 = {
# +        type: "tendermint/PubKeySecp256k1",
# +        value: "AtQaCqFnshaZQp6rIkvAPyzThvCvXSDO+9AzbxVErqJP",
# +    };
# +    const pubkeyMultisigThreshold = {
# +        type: "tendermint/PubKeyMultisigThreshold",
# +        value: {
# +            threshold: "3",
# +            pubkeys: [
# +                {
# +                    type: "tendermint/PubKeySecp256k1",
# +                    value: "A4KZH7VSRwW/6RTExROivRYKsQP63LnGcBlXFo+eKGpQ",
# +                },
# +                {
# +                    type: "tendermint/PubKeySecp256k1",
# +                    value: "A8/Cq4VigOnDgl6RSdcx97fjrdCo/qwAX6C34n7ZDZLs",
# +                },
# +                {
# +                    type: "tendermint/PubKeySecp256k1",
# +                    value: "ApKgZuwy03xgdRnXqG6yEHATomsWDOPacy7nbpsuUCSS",
# +                },
# +                {
# +                    type: "tendermint/PubKeySecp256k1",
# +                    value: "Aptm8E3WSSFS0RTAIUW+bLi/slYnTEE+h4qPTG28CHfq",
# +                },
# +            ],
# +        },
# +    };
# +    describe("isSinglePubkey", () => {
# +        it("works", () => {
# +            expect((0, pubkeys_1.isSinglePubkey)(pubkeyEd25519)).toEqual(true);
# +            expect((0, pubkeys_1.isSinglePubkey)(pubkeySecp256k1)).toEqual(true);
# +            expect((0, pubkeys_1.isSinglePubkey)(pubkeyMultisigThreshold)).toEqual(false);
# +        });
# +    });
# +    describe("isMultisigThresholdPubkey", () => {
# +        it("works", () => {
# +            expect((0, pubkeys_1.isMultisigThresholdPubkey)(pubkeyEd25519)).toEqual(false);
# +            expect((0, pubkeys_1.isMultisigThresholdPubkey)(pubkeySecp256k1)).toEqual(false);
# +            expect((0, pubkeys_1.isMultisigThresholdPubkey)(pubkeyMultisigThreshold)).toEqual(true);
# +        });
# +    });
# +});
# +//# sourceMappingURL=pubkeys.spec.js.map
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/pubkeys.spec.js.map b/node_modules/@cosmjs/amino/build/pubkeys.spec.js.map
# new file mode 100644
# index 0000000..4ec0b3f
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/pubkeys.spec.js.map
# @@ -0,0 +1 @@
# +{"version":3,"file":"pubkeys.spec.js","sourceRoot":"","sources":["../src/pubkeys.spec.ts"],"names":[],"mappings":";;AAAA,uCAAsE;AAEtE,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;IACvB,MAAM,aAAa,GAAG;QACpB,IAAI,EAAE,0BAA0B;QAChC,KAAK,EAAE,8CAA8C;KACtD,CAAC;IACF,MAAM,eAAe,GAAG;QACtB,IAAI,EAAE,4BAA4B;QAClC,KAAK,EAAE,8CAA8C;KACtD,CAAC;IACF,MAAM,uBAAuB,GAAG;QAC9B,IAAI,EAAE,oCAAoC;QAC1C,KAAK,EAAE;YACL,SAAS,EAAE,GAAG;YACd,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,4BAA4B;oBAClC,KAAK,EAAE,8CAA8C;iBACtD;gBACD;oBACE,IAAI,EAAE,4BAA4B;oBAClC,KAAK,EAAE,8CAA8C;iBACtD;gBACD;oBACE,IAAI,EAAE,4BAA4B;oBAClC,KAAK,EAAE,8CAA8C;iBACtD;gBACD;oBACE,IAAI,EAAE,4BAA4B;oBAClC,KAAK,EAAE,8CAA8C;iBACtD;aACF;SACF;KACF,CAAC;IAEF,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;QAC9B,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE;YACf,MAAM,CAAC,IAAA,wBAAc,EAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACpD,MAAM,CAAC,IAAA,wBAAc,EAAC,eAAe,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACtD,MAAM,CAAC,IAAA,wBAAc,EAAC,uBAAuB,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,2BAA2B,EAAE,GAAG,EAAE;QACzC,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE;YACf,MAAM,CAAC,IAAA,mCAAyB,EAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAChE,MAAM,CAAC,IAAA,mCAAyB,EAAC,eAAe,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAClE,MAAM,CAAC,IAAA,mCAAyB,EAAC,uBAAuB,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC"}
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/secp256k1hdwallet.js b/node_modules/@cosmjs/amino/build/secp256k1hdwallet.js
# index 55d051d..b700bc3 100644
# --- a/node_modules/@cosmjs/amino/build/secp256k1hdwallet.js
# +++ b/node_modules/@cosmjs/amino/build/secp256k1hdwallet.js
# @@ -53,8 +53,9 @@ const defaultOptions = {
#  };
#  class Secp256k1HdWallet {
#      constructor(mnemonic, options) {
# -        const hdPaths = options.hdPaths ?? defaultOptions.hdPaths;
# -        const prefix = options.prefix ?? defaultOptions.prefix;
# +        var _a, _b;
# +        const hdPaths = (_a = options.hdPaths) !== null && _a !== void 0 ? _a : defaultOptions.hdPaths;
# +        const prefix = (_b = options.prefix) !== null && _b !== void 0 ? _b : defaultOptions.prefix;
#          this.secret = mnemonic;
#          this.seed = options.seed;
#          this.accounts = hdPaths.map((hdPath) => ({
# diff --git a/node_modules/@cosmjs/amino/build/secp256k1hdwallet.js.map b/node_modules/@cosmjs/amino/build/secp256k1hdwallet.js.map
# index 4ad95d2..89b2ac5 100644
# --- a/node_modules/@cosmjs/amino/build/secp256k1hdwallet.js.map
# +++ b/node_modules/@cosmjs/amino/build/secp256k1hdwallet.js.map
# @@ -1 +1 @@
# -{"version":3,"file":"secp256k1hdwallet.js","sourceRoot":"","sources":["../src/secp256k1hdwallet.ts"],"names":[],"mappings":"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"}
# \ No newline at end of file
# +{"version":3,"file":"secp256k1hdwallet.js","sourceRoot":"","sources":["../src/secp256k1hdwallet.ts"],"names":[],"mappings":";;;AAAA,2CAYwB;AACxB,+CAAoF;AACpF,yCAAwD;AAExD,2CAA6D;AAC7D,mCAA4C;AAC5C,2CAAuD;AACvD,uCAAyD;AAEzD,qCAOkB;AAMlB,MAAM,mBAAmB,GAAG,oBAAoB,CAAC;AAEjD;;;GAGG;AACH,MAAM,2BAA2B,GAAqB;IACpD,SAAS,EAAE,UAAU;IACrB,MAAM,EAAE;QACN,YAAY,EAAE,EAAE;QAChB,QAAQ,EAAE,EAAE;QACZ,WAAW,EAAE,EAAE,GAAG,IAAI;KACvB;CACF,CAAC;AA0BF,SAAS,gBAAgB,CAAC,KAAc;IACtC,IAAI,CAAC,IAAA,uBAAe,EAAC,KAAK,CAAC;QAAE,OAAO,KAAK,CAAC;IAC1C,IAAI,OAAQ,KAA4B,CAAC,MAAM,KAAK,QAAQ;QAAE,OAAO,KAAK,CAAC;IAC3E,IAAI,OAAQ,KAA4B,CAAC,MAAM,KAAK,QAAQ;QAAE,OAAO,KAAK,CAAC;IAC3E,OAAO,IAAI,CAAC;AACd,CAAC;AAWD,SAAS,yBAAyB,CAAC,GAAQ;IACzC,OAAO,GAAG,CAAC,GAAG,CAAC;AACjB,CAAC;AAED,SAAgB,uBAAuB,CAAC,aAAqB;IAC3D,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;IACvC,IAAI,CAAC,IAAA,uBAAe,EAAC,IAAI,CAAC;QAAE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;IAE/E,QAAS,IAAY,CAAC,IAAI,EAAE;QAC1B,KAAK,mBAAmB;YACtB,OAAO,yBAAyB,CAAC,IAAI,CAAC,CAAC;QACzC;YACE,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;KACrD;AACH,CAAC;AAVD,0DAUC;AAwBD,MAAM,cAAc,GAA6B;IAC/C,aAAa,EAAE,EAAE;IACjB,OAAO,EAAE,CAAC,IAAA,yBAAiB,EAAC,CAAC,CAAC,CAAC;IAC/B,MAAM,EAAE,QAAQ;CACjB,CAAC;AAEF,MAAa,iBAAiB;IAkH5B,YAAsB,QAAyB,EAAE,OAA4C;;QAC3F,MAAM,OAAO,GAAG,MAAA,OAAO,CAAC,OAAO,mCAAI,cAAc,CAAC,OAAO,CAAC;QAC1D,MAAM,MAAM,GAAG,MAAA,OAAO,CAAC,MAAM,mCAAI,cAAc,CAAC,MAAM,CAAC;QACvD,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YACvC,MAAM,EAAE,MAAM;YACd,MAAM;SACP,CAAC,CAAC,CAAC;IACN,CAAC;IA1HD;;;;;OAKG;IACI,MAAM,CAAC,KAAK,CAAC,YAAY,CAC9B,QAAgB,EAChB,UAA6C,EAAE;QAE/C,MAAM,eAAe,GAAG,IAAI,wBAAe,CAAC,QAAQ,CAAC,CAAC;QACtD,MAAM,IAAI,GAAG,MAAM,cAAK,CAAC,cAAc,CAAC,eAAe,EAAE,OAAO,CAAC,aAAa,CAAC,CAAC;QAChF,OAAO,IAAI,iBAAiB,CAAC,eAAe,EAAE;YAC5C,GAAG,OAAO;YACV,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAC,KAAK,CAAC,QAAQ,CAC1B,SAAiC,EAAE,EACnC,UAA6C,EAAE;QAE/C,MAAM,aAAa,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;QACzD,MAAM,OAAO,GAAG,eAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC/C,MAAM,QAAQ,GAAG,cAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACvC,OAAO,iBAAiB,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,OAAO,CAAC,CAAC;IACtE,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,aAAqB,EAAE,QAAgB;QACrE,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QACvC,IAAI,CAAC,IAAA,uBAAe,EAAC,IAAI,CAAC;YAAE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;QAC/E,QAAS,IAAY,CAAC,IAAI,EAAE;YAC1B,KAAK,mBAAmB;gBACtB,OAAO,iBAAiB,CAAC,iBAAiB,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;YACtE;gBACE,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;SACrD;IACH,CAAC;IAED;;;;;;;;OAQG;IACI,MAAM,CAAC,KAAK,CAAC,4BAA4B,CAC9C,aAAqB,EACrB,aAAyB;QAEzB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QACvC,IAAI,CAAC,IAAA,uBAAe,EAAC,IAAI,CAAC;YAAE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;QAC/E,MAAM,WAAW,GAAQ,IAAI,CAAC;QAC9B,QAAQ,WAAW,CAAC,IAAI,EAAE;YACxB,KAAK,mBAAmB,CAAC,CAAC;gBACxB,MAAM,cAAc,GAAG,MAAM,IAAA,gBAAO,EAClC,IAAA,qBAAU,EAAC,WAAW,CAAC,IAAI,CAAC,EAC5B,aAAa,EACb,WAAW,CAAC,UAAU,CACvB,CAAC;gBACF,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAA,mBAAQ,EAAC,cAAc,CAAC,CAAC,CAAC;gBAC/D,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,iBAAiB,CAAC;gBACjD,IAAA,cAAM,EAAC,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC;gBACrC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;oBAAE,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;gBACrF,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,EAAE;oBAC3D,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;iBAC1D;gBACD,MAAM,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;gBACvC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,MAAM,KAAK,WAAW,CAAC,EAAE;oBAC3D,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;iBAC7D;gBACD,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,IAAA,qBAAY,EAAC,MAAM,CAAC,CAAC,CAAC;gBACnE,OAAO,iBAAiB,CAAC,YAAY,CAAC,QAAQ,EAAE;oBAC9C,OAAO,EAAE,OAAO;oBAChB,MAAM,EAAE,WAAW;iBACpB,CAAC,CAAC;aACJ;YACD;gBACE,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;SACrD;IACH,CAAC;IAEO,MAAM,CAAC,KAAK,CAAC,iBAAiB,CACpC,aAAqB,EACrB,QAAgB;QAEhB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QACvC,IAAI,CAAC,IAAA,uBAAe,EAAC,IAAI,CAAC;YAAE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;QAC/E,MAAM,aAAa,GAAG,MAAM,IAAA,mBAAU,EAAC,QAAQ,EAAG,IAAY,CAAC,GAAG,CAAC,CAAC;QACpE,OAAO,iBAAiB,CAAC,4BAA4B,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;IACtF,CAAC;IAoBD,IAAW,QAAQ;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;IAChC,CAAC;IAEM,KAAK,CAAC,WAAW;QACtB,MAAM,oBAAoB,GAAG,MAAM,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAClE,OAAO,oBAAoB,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC;YAC9D,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC,CAAC;IACN,CAAC;IAEM,KAAK,CAAC,SAAS,CAAC,aAAqB,EAAE,OAAmB;QAC/D,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,uBAAuB,EAAE,CAAC;QACtD,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,OAAO,KAAK,aAAa,CAAC,CAAC;QAC1E,IAAI,OAAO,KAAK,SAAS,EAAE;YACzB,MAAM,IAAI,KAAK,CAAC,WAAW,aAAa,sBAAsB,CAAC,CAAC;SACjE;QACD,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC;QACpC,MAAM,OAAO,GAAG,IAAA,eAAM,EAAC,IAAA,0BAAgB,EAAC,OAAO,CAAC,CAAC,CAAC;QAClD,MAAM,SAAS,GAAG,MAAM,kBAAS,CAAC,eAAe,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACpE,MAAM,cAAc,GAAG,IAAI,UAAU,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAChF,OAAO;YACL,MAAM,EAAE,OAAO;YACf,SAAS,EAAE,IAAA,oCAAwB,EAAC,MAAM,EAAE,cAAc,CAAC;SAC5D,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACI,KAAK,CAAC,SAAS,CAAC,QAAgB;QACrC,MAAM,gBAAgB,GAAG,2BAA2B,CAAC;QACrD,MAAM,aAAa,GAAG,MAAM,IAAA,mBAAU,EAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;QACnE,OAAO,IAAI,CAAC,0BAA0B,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAC;IAC1E,CAAC;IAED;;;;;;;;OAQG;IACI,KAAK,CAAC,0BAA0B,CACrC,aAAyB,EACzB,gBAAkC;QAElC,MAAM,aAAa,GAA0B;YAC3C,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;gBACnD,MAAM,EAAE,IAAA,qBAAY,EAAC,MAAM,CAAC;gBAC5B,MAAM,EAAE,MAAM;aACf,CAAC,CAAC;SACJ,CAAC;QACF,MAAM,gBAAgB,GAAG,IAAA,iBAAM,EAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;QAE/D,MAAM,uBAAuB,GAA4B;YACvD,SAAS,EAAE,4BAAmB,CAAC,qBAAqB;SACrD,CAAC;QACF,MAAM,aAAa,GAAG,MAAM,IAAA,gBAAO,EAAC,gBAAgB,EAAE,aAAa,EAAE,uBAAuB,CAAC,CAAC;QAE9F,MAAM,GAAG,GAAmC;YAC1C,IAAI,EAAE,mBAAmB;YACzB,GAAG,EAAE,gBAAgB;YACrB,UAAU,EAAE,uBAAuB;YACnC,IAAI,EAAE,IAAA,mBAAQ,EAAC,aAAa,CAAC;SAC9B,CAAC;QACF,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAEO,KAAK,CAAC,UAAU,CAAC,MAAc;QACrC,MAAM,EAAE,OAAO,EAAE,GAAG,eAAM,CAAC,UAAU,CAAC,oBAAW,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAChF,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,kBAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACxD,OAAO;YACL,OAAO,EAAE,OAAO;YAChB,MAAM,EAAE,kBAAS,CAAC,cAAc,CAAC,MAAM,CAAC;SACzC,CAAC;IACJ,CAAC;IAEO,KAAK,CAAC,uBAAuB;QACnC,OAAO,OAAO,CAAC,GAAG,CAChB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,EAAE;YAC7C,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAC1D,MAAM,OAAO,GAAG,IAAA,mBAAQ,EAAC,MAAM,EAAE,IAAA,0CAA8B,EAAC,MAAM,CAAC,CAAC,CAAC;YACzE,OAAO;gBACL,IAAI,EAAE,WAAoB;gBAC1B,OAAO,EAAE,OAAO;gBAChB,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE,OAAO;aACjB,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;CACF;AAjOD,8CAiOC"}
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/secp256k1hdwallet.spec.d.ts b/node_modules/@cosmjs/amino/build/secp256k1hdwallet.spec.d.ts
# new file mode 100644
# index 0000000..cb0ff5c
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/secp256k1hdwallet.spec.d.ts
# @@ -0,0 +1 @@
# +export {};
# diff --git a/node_modules/@cosmjs/amino/build/secp256k1hdwallet.spec.js b/node_modules/@cosmjs/amino/build/secp256k1hdwallet.spec.js
# new file mode 100644
# index 0000000..fe0e76f
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/secp256k1hdwallet.spec.js
# @@ -0,0 +1,287 @@
# +"use strict";
# +Object.defineProperty(exports, "__esModule", { value: true });
# +/* eslint-disable @typescript-eslint/naming-convention */
# +const crypto_1 = require("@cosmjs/crypto");
# +const encoding_1 = require("@cosmjs/encoding");
# +const paths_1 = require("./paths");
# +const secp256k1hdwallet_1 = require("./secp256k1hdwallet");
# +const signdoc_1 = require("./signdoc");
# +const testutils_spec_1 = require("./testutils.spec");
# +const wallet_1 = require("./wallet");
# +describe("Secp256k1HdWallet", () => {
# +    // m/44'/118'/0'/0/0
# +    // pubkey: 02baa4ef93f2ce84592a49b1d729c074eab640112522a7a89f7d03ebab21ded7b6
# +    const defaultMnemonic = "special sign fit simple patrol salute grocery chicken wheat radar tonight ceiling";
# +    const defaultPubkey = (0, encoding_1.fromHex)("02baa4ef93f2ce84592a49b1d729c074eab640112522a7a89f7d03ebab21ded7b6");
# +    const defaultAddress = "cosmos1jhg0e7s6gn44tfc5k37kr04sznyhedtc9rzys5";
# +    describe("fromMnemonic", () => {
# +        it("works", async () => {
# +            const wallet = await secp256k1hdwallet_1.Secp256k1HdWallet.fromMnemonic(defaultMnemonic);
# +            expect(wallet).toBeTruthy();
# +            expect(wallet.mnemonic).toEqual(defaultMnemonic);
# +        });
# +        it("works with options", async () => {
# +            const wallet = await secp256k1hdwallet_1.Secp256k1HdWallet.fromMnemonic(defaultMnemonic, {
# +                bip39Password: "password123",
# +                hdPaths: [(0, paths_1.makeCosmoshubPath)(123)],
# +                prefix: "yolo",
# +            });
# +            expect(wallet.mnemonic).toEqual(defaultMnemonic);
# +            const [account] = await wallet.getAccounts();
# +            expect(account.pubkey).not.toEqual(defaultPubkey);
# +            expect(account.address.slice(0, 4)).toEqual("yolo");
# +        });
# +        it("works with explicitly undefined options", async () => {
# +            const wallet = await secp256k1hdwallet_1.Secp256k1HdWallet.fromMnemonic(defaultMnemonic, {
# +                bip39Password: undefined,
# +                hdPaths: undefined,
# +                prefix: undefined,
# +            });
# +            expect(wallet.mnemonic).toEqual(defaultMnemonic);
# +            const [account] = await wallet.getAccounts();
# +            expect(account.pubkey).toEqual(defaultPubkey);
# +            expect(account.address).toEqual(defaultAddress);
# +        });
# +    });
# +    describe("generate", () => {
# +        it("defaults to 12 words", async () => {
# +            const wallet = await secp256k1hdwallet_1.Secp256k1HdWallet.generate();
# +            expect(wallet.mnemonic.split(" ").length).toEqual(12);
# +        });
# +        it("can use different mnemonic lengths", async () => {
# +            expect((await secp256k1hdwallet_1.Secp256k1HdWallet.generate(12)).mnemonic.split(" ").length).toEqual(12);
# +            expect((await secp256k1hdwallet_1.Secp256k1HdWallet.generate(15)).mnemonic.split(" ").length).toEqual(15);
# +            expect((await secp256k1hdwallet_1.Secp256k1HdWallet.generate(18)).mnemonic.split(" ").length).toEqual(18);
# +            expect((await secp256k1hdwallet_1.Secp256k1HdWallet.generate(21)).mnemonic.split(" ").length).toEqual(21);
# +            expect((await secp256k1hdwallet_1.Secp256k1HdWallet.generate(24)).mnemonic.split(" ").length).toEqual(24);
# +        });
# +    });
# +    describe("deserialize", () => {
# +        it("can restore", async () => {
# +            const original = await secp256k1hdwallet_1.Secp256k1HdWallet.fromMnemonic(defaultMnemonic);
# +            const password = "123";
# +            const serialized = await original.serialize(password);
# +            const deserialized = await secp256k1hdwallet_1.Secp256k1HdWallet.deserialize(serialized, password);
# +            const accounts = await deserialized.getAccounts();
# +            expect(deserialized.mnemonic).toEqual(defaultMnemonic);
# +            expect(accounts).toEqual([
# +                {
# +                    algo: "secp256k1",
# +                    address: defaultAddress,
# +                    pubkey: defaultPubkey,
# +                },
# +            ]);
# +        });
# +        it("can restore multiple accounts", async () => {
# +            const mnemonic = "economy stock theory fatal elder harbor betray wasp final emotion task crumble siren bottom lizard educate guess current outdoor pair theory focus wife stone";
# +            const prefix = "wasm";
# +            const accountNumbers = [0, 1, 2, 3, 4];
# +            const hdPaths = accountNumbers.map(paths_1.makeCosmoshubPath);
# +            const original = await secp256k1hdwallet_1.Secp256k1HdWallet.fromMnemonic(mnemonic, {
# +                hdPaths: hdPaths,
# +                prefix: prefix,
# +            });
# +            const password = "123";
# +            const serialized = await original.serialize(password);
# +            const deserialized = await secp256k1hdwallet_1.Secp256k1HdWallet.deserialize(serialized, password);
# +            const accounts = await deserialized.getAccounts();
# +            expect(deserialized.mnemonic).toEqual(mnemonic);
# +            // These values are taken from the generate_addresses.js script in the scripts/wasmd directory
# +            expect(accounts).toEqual([
# +                {
# +                    algo: "secp256k1",
# +                    pubkey: (0, encoding_1.fromBase64)("A08EGB7ro1ORuFhjOnZcSgwYlpe0DSFjVNUIkNNQxwKQ"),
# +                    address: "wasm1pkptre7fdkl6gfrzlesjjvhxhlc3r4gm32kke3",
# +                },
# +                {
# +                    algo: "secp256k1",
# +                    pubkey: (0, encoding_1.fromBase64)("AiDosfIbBi54XJ1QjCeApumcy/FjdtF+YhywPf3DKTx7"),
# +                    address: "wasm10dyr9899g6t0pelew4nvf4j5c3jcgv0r5d3a5l",
# +                },
# +                {
# +                    algo: "secp256k1",
# +                    pubkey: (0, encoding_1.fromBase64)("AzQg33JZqH7vSsm09esZY5bZvmzYwE/SY78cA0iLxpD7"),
# +                    address: "wasm1xy4yqngt0nlkdcenxymg8tenrghmek4n3u2lwa",
# +                },
# +                {
# +                    algo: "secp256k1",
# +                    pubkey: (0, encoding_1.fromBase64)("A3gOAlB6aiRTCPvWMQg2+ZbGYNsLd8qlvV28m8p2UhY2"),
# +                    address: "wasm142u9fgcjdlycfcez3lw8x6x5h7rfjlnfaallkd",
# +                },
# +                {
# +                    algo: "secp256k1",
# +                    pubkey: (0, encoding_1.fromBase64)("Aum2063ub/ErUnIUB36sK55LktGUStgcbSiaAnL1wadu"),
# +                    address: "wasm1hsm76p4ahyhl5yh3ve9ur49r5kemhp2r93f89d",
# +                },
# +            ]);
# +        });
# +    });
# +    describe("deserializeWithEncryptionKey", () => {
# +        it("can restore", async () => {
# +            const password = "123";
# +            let serialized;
# +            {
# +                const original = await secp256k1hdwallet_1.Secp256k1HdWallet.fromMnemonic(defaultMnemonic);
# +                const anyKdfParams = {
# +                    algorithm: "argon2id",
# +                    params: {
# +                        outputLength: 32,
# +                        opsLimit: 4,
# +                        memLimitKib: 3 * 1024,
# +                    },
# +                };
# +                const encryptionKey = await (0, wallet_1.executeKdf)(password, anyKdfParams);
# +                serialized = await original.serializeWithEncryptionKey(encryptionKey, anyKdfParams);
# +            }
# +            {
# +                const kdfConfiguration = (0, secp256k1hdwallet_1.extractKdfConfiguration)(serialized);
# +                const encryptionKey = await (0, wallet_1.executeKdf)(password, kdfConfiguration);
# +                const deserialized = await secp256k1hdwallet_1.Secp256k1HdWallet.deserializeWithEncryptionKey(serialized, encryptionKey);
# +                expect(deserialized.mnemonic).toEqual(defaultMnemonic);
# +                expect(await deserialized.getAccounts()).toEqual([
# +                    {
# +                        algo: "secp256k1",
# +                        address: defaultAddress,
# +                        pubkey: defaultPubkey,
# +                    },
# +                ]);
# +            }
# +        });
# +        it("can restore multiple accounts", async () => {
# +            const mnemonic = "economy stock theory fatal elder harbor betray wasp final emotion task crumble siren bottom lizard educate guess current outdoor pair theory focus wife stone";
# +            const prefix = "wasm";
# +            const password = "123";
# +            const accountNumbers = [0, 1, 2, 3, 4];
# +            const hdPaths = accountNumbers.map(paths_1.makeCosmoshubPath);
# +            let serialized;
# +            {
# +                const original = await secp256k1hdwallet_1.Secp256k1HdWallet.fromMnemonic(mnemonic, { prefix: prefix, hdPaths: hdPaths });
# +                const anyKdfParams = {
# +                    algorithm: "argon2id",
# +                    params: {
# +                        outputLength: 32,
# +                        opsLimit: 4,
# +                        memLimitKib: 3 * 1024,
# +                    },
# +                };
# +                const encryptionKey = await (0, wallet_1.executeKdf)(password, anyKdfParams);
# +                serialized = await original.serializeWithEncryptionKey(encryptionKey, anyKdfParams);
# +            }
# +            {
# +                const kdfConfiguration = (0, secp256k1hdwallet_1.extractKdfConfiguration)(serialized);
# +                const encryptionKey = await (0, wallet_1.executeKdf)(password, kdfConfiguration);
# +                const deserialized = await secp256k1hdwallet_1.Secp256k1HdWallet.deserializeWithEncryptionKey(serialized, encryptionKey);
# +                const accounts = await deserialized.getAccounts();
# +                expect(deserialized.mnemonic).toEqual(mnemonic);
# +                expect(deserialized.mnemonic).toEqual(mnemonic);
# +                // These values are taken from the generate_addresses.js script in the scripts/wasmd directory
# +                expect(accounts).toEqual([
# +                    {
# +                        algo: "secp256k1",
# +                        pubkey: (0, encoding_1.fromBase64)("A08EGB7ro1ORuFhjOnZcSgwYlpe0DSFjVNUIkNNQxwKQ"),
# +                        address: "wasm1pkptre7fdkl6gfrzlesjjvhxhlc3r4gm32kke3",
# +                    },
# +                    {
# +                        algo: "secp256k1",
# +                        pubkey: (0, encoding_1.fromBase64)("AiDosfIbBi54XJ1QjCeApumcy/FjdtF+YhywPf3DKTx7"),
# +                        address: "wasm10dyr9899g6t0pelew4nvf4j5c3jcgv0r5d3a5l",
# +                    },
# +                    {
# +                        algo: "secp256k1",
# +                        pubkey: (0, encoding_1.fromBase64)("AzQg33JZqH7vSsm09esZY5bZvmzYwE/SY78cA0iLxpD7"),
# +                        address: "wasm1xy4yqngt0nlkdcenxymg8tenrghmek4n3u2lwa",
# +                    },
# +                    {
# +                        algo: "secp256k1",
# +                        pubkey: (0, encoding_1.fromBase64)("A3gOAlB6aiRTCPvWMQg2+ZbGYNsLd8qlvV28m8p2UhY2"),
# +                        address: "wasm142u9fgcjdlycfcez3lw8x6x5h7rfjlnfaallkd",
# +                    },
# +                    {
# +                        algo: "secp256k1",
# +                        pubkey: (0, encoding_1.fromBase64)("Aum2063ub/ErUnIUB36sK55LktGUStgcbSiaAnL1wadu"),
# +                        address: "wasm1hsm76p4ahyhl5yh3ve9ur49r5kemhp2r93f89d",
# +                    },
# +                ]);
# +            }
# +        });
# +    });
# +    describe("getAccounts", () => {
# +        it("resolves to a list of accounts", async () => {
# +            const wallet = await secp256k1hdwallet_1.Secp256k1HdWallet.fromMnemonic(defaultMnemonic);
# +            const accounts = await wallet.getAccounts();
# +            expect(accounts.length).toEqual(1);
# +            expect(accounts[0]).toEqual({
# +                address: defaultAddress,
# +                algo: "secp256k1",
# +                pubkey: defaultPubkey,
# +            });
# +        });
# +        it("creates the same address as Go implementation", async () => {
# +            const wallet = await secp256k1hdwallet_1.Secp256k1HdWallet.fromMnemonic("oyster design unusual machine spread century engine gravity focus cave carry slot");
# +            const [{ address }] = await wallet.getAccounts();
# +            expect(address).toEqual("cosmos1cjsxept9rkggzxztslae9ndgpdyt2408lk850u");
# +        });
# +    });
# +    describe("signAmino", () => {
# +        it("resolves to valid signature", async () => {
# +            const wallet = await secp256k1hdwallet_1.Secp256k1HdWallet.fromMnemonic(defaultMnemonic);
# +            const signDoc = {
# +                msgs: [],
# +                fee: { amount: [], gas: "23" },
# +                chain_id: "foochain",
# +                memo: "hello, world",
# +                account_number: "7",
# +                sequence: "54",
# +            };
# +            const { signed, signature } = await wallet.signAmino(defaultAddress, signDoc);
# +            expect(signed).toEqual(signDoc);
# +            const valid = await crypto_1.Secp256k1.verifySignature(crypto_1.Secp256k1Signature.fromFixedLength((0, encoding_1.fromBase64)(signature.signature)), (0, crypto_1.sha256)((0, signdoc_1.serializeSignDoc)(signed)), defaultPubkey);
# +            expect(valid).toEqual(true);
# +        });
# +    });
# +    describe("serialize", () => {
# +        it("can save with password", async () => {
# +            const wallet = await secp256k1hdwallet_1.Secp256k1HdWallet.fromMnemonic(defaultMnemonic);
# +            const serialized = await wallet.serialize("123");
# +            expect(JSON.parse(serialized)).toEqual({
# +                type: "secp256k1wallet-v1",
# +                kdf: {
# +                    algorithm: "argon2id",
# +                    params: {
# +                        outputLength: 32,
# +                        opsLimit: 24,
# +                        memLimitKib: 12 * 1024,
# +                    },
# +                },
# +                encryption: {
# +                    algorithm: "xchacha20poly1305-ietf",
# +                },
# +                data: jasmine.stringMatching(testutils_spec_1.base64Matcher),
# +            });
# +        });
# +    });
# +    describe("serializeWithEncryptionKey", () => {
# +        it("can save with password", async () => {
# +            const wallet = await secp256k1hdwallet_1.Secp256k1HdWallet.fromMnemonic(defaultMnemonic);
# +            const key = (0, encoding_1.fromHex)("aabb221100aabb332211aabb33221100aabb221100aabb332211aabb33221100");
# +            const customKdfConfiguration = {
# +                algorithm: "argon2id",
# +                params: {
# +                    outputLength: 32,
# +                    opsLimit: 321,
# +                    memLimitKib: 11 * 1024,
# +                },
# +            };
# +            const serialized = await wallet.serializeWithEncryptionKey(key, customKdfConfiguration);
# +            expect(JSON.parse(serialized)).toEqual({
# +                type: "secp256k1wallet-v1",
# +                kdf: customKdfConfiguration,
# +                encryption: {
# +                    algorithm: "xchacha20poly1305-ietf",
# +                },
# +                data: jasmine.stringMatching(testutils_spec_1.base64Matcher),
# +            });
# +        });
# +    });
# +});
# +//# sourceMappingURL=secp256k1hdwallet.spec.js.map
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/secp256k1hdwallet.spec.js.map b/node_modules/@cosmjs/amino/build/secp256k1hdwallet.spec.js.map
# new file mode 100644
# index 0000000..c4edf81
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/secp256k1hdwallet.spec.js.map
# @@ -0,0 +1 @@
# +{"version":3,"file":"secp256k1hdwallet.spec.js","sourceRoot":"","sources":["../src/secp256k1hdwallet.spec.ts"],"names":[],"mappings":"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"}
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/secp256k1wallet.spec.d.ts b/node_modules/@cosmjs/amino/build/secp256k1wallet.spec.d.ts
# new file mode 100644
# index 0000000..cb0ff5c
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/secp256k1wallet.spec.d.ts
# @@ -0,0 +1 @@
# +export {};
# diff --git a/node_modules/@cosmjs/amino/build/secp256k1wallet.spec.js b/node_modules/@cosmjs/amino/build/secp256k1wallet.spec.js
# new file mode 100644
# index 0000000..14225b2
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/secp256k1wallet.spec.js
# @@ -0,0 +1,48 @@
# +"use strict";
# +Object.defineProperty(exports, "__esModule", { value: true });
# +/* eslint-disable @typescript-eslint/naming-convention */
# +const crypto_1 = require("@cosmjs/crypto");
# +const encoding_1 = require("@cosmjs/encoding");
# +const secp256k1wallet_1 = require("./secp256k1wallet");
# +const signdoc_1 = require("./signdoc");
# +describe("Secp256k1Wallet", () => {
# +    const defaultPrivkey = (0, encoding_1.fromHex)("b8c462d2bb0c1a92edf44f735021f16c270f28ee2c3d1cb49943a5e70a3c763e");
# +    const defaultAddress = "cosmos1kxt5x5q2l57ma2d434pqpafxdm0mgeg9c8cvtx";
# +    const defaultPubkey = (0, encoding_1.fromHex)("03f146c27639179e5b67b8646108f48e1a78b146c74939e34afaa5414ad5c93f8a");
# +    describe("fromKey", () => {
# +        it("works", async () => {
# +            const signer = await secp256k1wallet_1.Secp256k1Wallet.fromKey(defaultPrivkey);
# +            expect(signer).toBeTruthy();
# +        });
# +    });
# +    describe("getAccounts", () => {
# +        it("resolves to a list of accounts", async () => {
# +            const signer = await secp256k1wallet_1.Secp256k1Wallet.fromKey(defaultPrivkey);
# +            const accounts = await signer.getAccounts();
# +            expect(accounts.length).toEqual(1);
# +            expect(accounts[0]).toEqual({
# +                address: defaultAddress,
# +                algo: "secp256k1",
# +                pubkey: defaultPubkey,
# +            });
# +        });
# +    });
# +    describe("signAmino", () => {
# +        it("resolves to valid signature", async () => {
# +            const signer = await secp256k1wallet_1.Secp256k1Wallet.fromKey(defaultPrivkey);
# +            const signDoc = {
# +                msgs: [],
# +                fee: { amount: [], gas: "23" },
# +                chain_id: "foochain",
# +                memo: "hello, world",
# +                account_number: "7",
# +                sequence: "54",
# +            };
# +            const { signed, signature } = await signer.signAmino(defaultAddress, signDoc);
# +            expect(signed).toEqual(signDoc);
# +            const valid = await crypto_1.Secp256k1.verifySignature(crypto_1.Secp256k1Signature.fromFixedLength((0, encoding_1.fromBase64)(signature.signature)), new crypto_1.Sha256((0, signdoc_1.serializeSignDoc)(signed)).digest(), defaultPubkey);
# +            expect(valid).toEqual(true);
# +        });
# +    });
# +});
# +//# sourceMappingURL=secp256k1wallet.spec.js.map
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/secp256k1wallet.spec.js.map b/node_modules/@cosmjs/amino/build/secp256k1wallet.spec.js.map
# new file mode 100644
# index 0000000..a6693ad
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/secp256k1wallet.spec.js.map
# @@ -0,0 +1 @@
# +{"version":3,"file":"secp256k1wallet.spec.js","sourceRoot":"","sources":["../src/secp256k1wallet.spec.ts"],"names":[],"mappings":";;AAAA,yDAAyD;AACzD,2CAAuE;AACvE,+CAAuD;AAEvD,uDAAoD;AACpD,uCAAyD;AAEzD,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,MAAM,cAAc,GAAG,IAAA,kBAAO,EAAC,kEAAkE,CAAC,CAAC;IACnG,MAAM,cAAc,GAAG,+CAA+C,CAAC;IACvE,MAAM,aAAa,GAAG,IAAA,kBAAO,EAAC,oEAAoE,CAAC,CAAC;IAEpG,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;QACvB,EAAE,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE;YACrB,MAAM,MAAM,GAAG,MAAM,iCAAe,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YAC7D,MAAM,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;QAC3B,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,MAAM,GAAG,MAAM,iCAAe,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YAC7D,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,WAAW,EAAE,CAAC;YAC5C,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBAC1B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE,WAAW;gBACjB,MAAM,EAAE,aAAa;aACtB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;QACzB,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;YAC3C,MAAM,MAAM,GAAG,MAAM,iCAAe,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YAC7D,MAAM,OAAO,GAAe;gBAC1B,IAAI,EAAE,EAAE;gBACR,GAAG,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE;gBAC9B,QAAQ,EAAE,UAAU;gBACpB,IAAI,EAAE,cAAc;gBACpB,cAAc,EAAE,GAAG;gBACnB,QAAQ,EAAE,IAAI;aACf,CAAC;YACF,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;YAC9E,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAChC,MAAM,KAAK,GAAG,MAAM,kBAAS,CAAC,eAAe,CAC3C,2BAAkB,CAAC,eAAe,CAAC,IAAA,qBAAU,EAAC,SAAS,CAAC,SAAS,CAAC,CAAC,EACnE,IAAI,eAAM,CAAC,IAAA,0BAAgB,EAAC,MAAM,CAAC,CAAC,CAAC,MAAM,EAAE,EAC7C,aAAa,CACd,CAAC;YACF,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC"}
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/signature.d.ts b/node_modules/@cosmjs/amino/build/signature.d.ts
# index c7fff17..fe1d812 100644
# --- a/node_modules/@cosmjs/amino/build/signature.d.ts
# +++ b/node_modules/@cosmjs/amino/build/signature.d.ts
# @@ -9,7 +9,7 @@ export interface StdSignature {
#   * @param pubkey a compressed secp256k1 public key
#   * @param signature a 64 byte fixed length representation of secp256k1 signature components r and s
#   */
# -export declare function encodeSecp256k1Signature(pubkey: Uint8Array, signature: Uint8Array): StdSignature;
# +export declare function encodeSecp256k1Signature(pubkey: Uint8Array, signature: Uint8Array, urlType?: string): StdSignature;
#  export declare function decodeSignature(signature: StdSignature): {
#      readonly pubkey: Uint8Array;
#      readonly signature: Uint8Array;
# diff --git a/node_modules/@cosmjs/amino/build/signature.js b/node_modules/@cosmjs/amino/build/signature.js
# index 6a06bec..600400b 100644
# --- a/node_modules/@cosmjs/amino/build/signature.js
# +++ b/node_modules/@cosmjs/amino/build/signature.js
# @@ -11,12 +11,12 @@ const pubkeys_1 = require("./pubkeys");
#   * @param pubkey a compressed secp256k1 public key
#   * @param signature a 64 byte fixed length representation of secp256k1 signature components r and s
#   */
# -function encodeSecp256k1Signature(pubkey, signature) {
# +function encodeSecp256k1Signature(pubkey, signature, urlType) {
#      if (signature.length !== 64) {
#          throw new Error("Signature must be 64 bytes long. Cosmos SDK uses a 2x32 byte fixed length encoding for the secp256k1 signature integers r and s.");
#      }
#      return {
# -        pub_key: (0, encoding_2.encodeSecp256k1Pubkey)(pubkey),
# +        pub_key: (0, encoding_2.encodeSecp256k1Pubkey)(pubkey, urlType),
#          signature: (0, encoding_1.toBase64)(signature),
#      };
#  }
# diff --git a/node_modules/@cosmjs/amino/build/signature.js.map b/node_modules/@cosmjs/amino/build/signature.js.map
# index fd69973..7bc78da 100644
# --- a/node_modules/@cosmjs/amino/build/signature.js.map
# +++ b/node_modules/@cosmjs/amino/build/signature.js.map
# @@ -1 +1 @@
# -{"version":3,"file":"signature.js","sourceRoot":"","sources":["../src/signature.ts"],"names":[],"mappings":";;;AAAA,yDAAyD;AACzD,+CAAwD;AAExD,yCAAmD;AACnD,uCAA+C;AAO/C;;;;;GAKG;AACH,SAAgB,wBAAwB,CAAC,MAAkB,EAAE,SAAqB;IAChF,IAAI,SAAS,CAAC,MAAM,KAAK,EAAE,EAAE;QAC3B,MAAM,IAAI,KAAK,CACb,kIAAkI,CACnI,CAAC;KACH;IAED,OAAO;QACL,OAAO,EAAE,IAAA,gCAAqB,EAAC,MAAM,CAAC;QACtC,SAAS,EAAE,IAAA,mBAAQ,EAAC,SAAS,CAAC;KAC/B,CAAC;AACJ,CAAC;AAXD,4DAWC;AAED,SAAgB,eAAe,CAAC,SAAuB;IAIrD,QAAQ,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE;QAC9B,0EAA0E;QAC1E,KAAK,oBAAU,CAAC,SAAS;YACvB,OAAO;gBACL,MAAM,EAAE,IAAA,qBAAU,EAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC;gBAC3C,SAAS,EAAE,IAAA,qBAAU,EAAC,SAAS,CAAC,SAAS,CAAC;aAC3C,CAAC;QACJ;YACE,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;KAC9C;AACH,CAAC;AAdD,0CAcC"}
# \ No newline at end of file
# +{"version":3,"file":"signature.js","sourceRoot":"","sources":["../src/signature.ts"],"names":[],"mappings":";;;AAAA,yDAAyD;AACzD,+CAAwD;AAExD,yCAAmD;AACnD,uCAA+C;AAO/C;;;;;GAKG;AACH,SAAgB,wBAAwB,CAAC,MAAkB,EAAE,SAAqB,EAAE,OAAgB;IAClG,IAAI,SAAS,CAAC,MAAM,KAAK,EAAE,EAAE;QAC3B,MAAM,IAAI,KAAK,CACb,kIAAkI,CACnI,CAAC;KACH;IAED,OAAO;QACL,OAAO,EAAE,IAAA,gCAAqB,EAAC,MAAM,EAAE,OAAO,CAAC;QAC/C,SAAS,EAAE,IAAA,mBAAQ,EAAC,SAAS,CAAC;KAC/B,CAAC;AACJ,CAAC;AAXD,4DAWC;AAED,SAAgB,eAAe,CAAC,SAAuB;IAIrD,QAAQ,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE;QAC9B,0EAA0E;QAC1E,KAAK,oBAAU,CAAC,SAAS;YACvB,OAAO;gBACL,MAAM,EAAE,IAAA,qBAAU,EAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC;gBAC3C,SAAS,EAAE,IAAA,qBAAU,EAAC,SAAS,CAAC,SAAS,CAAC;aAC3C,CAAC;QACJ;YACE,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;KAC9C;AACH,CAAC;AAdD,0CAcC"}
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/signature.spec.d.ts b/node_modules/@cosmjs/amino/build/signature.spec.d.ts
# new file mode 100644
# index 0000000..cb0ff5c
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/signature.spec.d.ts
# @@ -0,0 +1 @@
# +export {};
# diff --git a/node_modules/@cosmjs/amino/build/signature.spec.js b/node_modules/@cosmjs/amino/build/signature.spec.js
# new file mode 100644
# index 0000000..c3e68c5
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/signature.spec.js
# @@ -0,0 +1,49 @@
# +"use strict";
# +Object.defineProperty(exports, "__esModule", { value: true });
# +/* eslint-disable @typescript-eslint/naming-convention */
# +const encoding_1 = require("@cosmjs/encoding");
# +const signature_1 = require("./signature");
# +describe("signature", () => {
# +    describe("encodeSecp256k1Signature", () => {
# +        it("encodes a full signature", () => {
# +            const pubkey = (0, encoding_1.fromBase64)("AtQaCqFnshaZQp6rIkvAPyzThvCvXSDO+9AzbxVErqJP");
# +            const signature = (0, encoding_1.fromBase64)("1nUcIH0CLT0/nQ0mBTDrT6kMG20NY/PsH7P2gc4bpYNGLEYjBmdWevXUJouSE/9A/60QG9cYeqyTe5kFDeIPxQ==");
# +            expect((0, signature_1.encodeSecp256k1Signature)(pubkey, signature)).toEqual({
# +                pub_key: {
# +                    type: "tendermint/PubKeySecp256k1",
# +                    value: "AtQaCqFnshaZQp6rIkvAPyzThvCvXSDO+9AzbxVErqJP",
# +                },
# +                signature: "1nUcIH0CLT0/nQ0mBTDrT6kMG20NY/PsH7P2gc4bpYNGLEYjBmdWevXUJouSE/9A/60QG9cYeqyTe5kFDeIPxQ==",
# +            });
# +        });
# +        it("throws when getting uncompressed public keys", () => {
# +            const pubkey = (0, encoding_1.fromBase64)("BE8EGB7ro1ORuFhjOnZcSgwYlpe0DSFjVNUIkNNQxwKQE7WHpoHoNswYeoFkuYpYSKK4mzFzMV/dB0DVAy4lnNU=");
# +            const signature = (0, encoding_1.fromBase64)("1nUcIH0CLT0/nQ0mBTDrT6kMG20NY/PsH7P2gc4bpYNGLEYjBmdWevXUJouSE/9A/60QG9cYeqyTe5kFDeIPxQ==");
# +            expect(() => (0, signature_1.encodeSecp256k1Signature)(pubkey, signature)).toThrowError(/public key must be compressed secp256k1/i);
# +        });
# +        it("throws if signature contains recovery byte", () => {
# +            const pubkey = (0, encoding_1.fromBase64)("AtQaCqFnshaZQp6rIkvAPyzThvCvXSDO+9AzbxVErqJP");
# +            const signature = Uint8Array.from([
# +                ...(0, encoding_1.fromBase64)("1nUcIH0CLT0/nQ0mBTDrT6kMG20NY/PsH7P2gc4bpYNGLEYjBmdWevXUJouSE/9A/60QG9cYeqyTe5kFDeIPxQ=="),
# +                99,
# +            ]);
# +            expect(() => (0, signature_1.encodeSecp256k1Signature)(pubkey, signature)).toThrowError(/signature must be 64 bytes long/i);
# +        });
# +    });
# +    describe("decodeSignature", () => {
# +        it("works for secp256k1", () => {
# +            const signature = {
# +                pub_key: {
# +                    type: "tendermint/PubKeySecp256k1",
# +                    value: "AtQaCqFnshaZQp6rIkvAPyzThvCvXSDO+9AzbxVErqJP",
# +                },
# +                signature: "1nUcIH0CLT0/nQ0mBTDrT6kMG20NY/PsH7P2gc4bpYNGLEYjBmdWevXUJouSE/9A/60QG9cYeqyTe5kFDeIPxQ==",
# +            };
# +            expect((0, signature_1.decodeSignature)(signature)).toEqual({
# +                pubkey: (0, encoding_1.fromBase64)("AtQaCqFnshaZQp6rIkvAPyzThvCvXSDO+9AzbxVErqJP"),
# +                signature: (0, encoding_1.fromBase64)("1nUcIH0CLT0/nQ0mBTDrT6kMG20NY/PsH7P2gc4bpYNGLEYjBmdWevXUJouSE/9A/60QG9cYeqyTe5kFDeIPxQ=="),
# +            });
# +        });
# +    });
# +});
# +//# sourceMappingURL=signature.spec.js.map
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/signature.spec.js.map b/node_modules/@cosmjs/amino/build/signature.spec.js.map
# new file mode 100644
# index 0000000..ef2255c
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/signature.spec.js.map
# @@ -0,0 +1 @@
# +{"version":3,"file":"signature.spec.js","sourceRoot":"","sources":["../src/signature.spec.ts"],"names":[],"mappings":";;AAAA,yDAAyD;AACzD,+CAA8C;AAE9C,2CAAsF;AAEtF,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;IACzB,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;QACxC,EAAE,CAAC,0BAA0B,EAAE,GAAG,EAAE;YAClC,MAAM,MAAM,GAAG,IAAA,qBAAU,EAAC,8CAA8C,CAAC,CAAC;YAC1E,MAAM,SAAS,GAAG,IAAA,qBAAU,EAC1B,0FAA0F,CAC3F,CAAC;YACF,MAAM,CAAC,IAAA,oCAAwB,EAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC;gBAC1D,OAAO,EAAE;oBACP,IAAI,EAAE,4BAA4B;oBAClC,KAAK,EAAE,8CAA8C;iBACtD;gBACD,SAAS,EAAE,0FAA0F;aACtG,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;YACtD,MAAM,MAAM,GAAG,IAAA,qBAAU,EACvB,0FAA0F,CAC3F,CAAC;YACF,MAAM,SAAS,GAAG,IAAA,qBAAU,EAC1B,0FAA0F,CAC3F,CAAC;YACF,MAAM,CAAC,GAAG,EAAE,CAAC,IAAA,oCAAwB,EAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,YAAY,CACpE,0CAA0C,CAC3C,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;YACpD,MAAM,MAAM,GAAG,IAAA,qBAAU,EAAC,8CAA8C,CAAC,CAAC;YAC1E,MAAM,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC;gBAChC,GAAG,IAAA,qBAAU,EACX,0FAA0F,CAC3F;gBACD,EAAE;aACH,CAAC,CAAC;YACH,MAAM,CAAC,GAAG,EAAE,CAAC,IAAA,oCAAwB,EAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,YAAY,CACpE,kCAAkC,CACnC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;QAC/B,EAAE,CAAC,qBAAqB,EAAE,GAAG,EAAE;YAC7B,MAAM,SAAS,GAAiB;gBAC9B,OAAO,EAAE;oBACP,IAAI,EAAE,4BAA4B;oBAClC,KAAK,EAAE,8CAA8C;iBACtD;gBACD,SAAS,EAAE,0FAA0F;aACtG,CAAC;YACF,MAAM,CAAC,IAAA,2BAAe,EAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC;gBACzC,MAAM,EAAE,IAAA,qBAAU,EAAC,8CAA8C,CAAC;gBAClE,SAAS,EAAE,IAAA,qBAAU,EACnB,0FAA0F,CAC3F;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC"}
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/signdoc.d.ts b/node_modules/@cosmjs/amino/build/signdoc.d.ts
# index bd787c0..6df0baf 100644
# --- a/node_modules/@cosmjs/amino/build/signdoc.d.ts
# +++ b/node_modules/@cosmjs/amino/build/signdoc.d.ts
# @@ -6,10 +6,6 @@ export interface AminoMsg {
#  export interface StdFee {
#      readonly amount: readonly Coin[];
#      readonly gas: string;
# -    /** The granter address that is used for paying with feegrants */
# -    readonly granter?: string;
# -    /** The fee payer address. The payer must have signed the transaction. */
# -    readonly payer?: string;
#  }
#  /**
#   * The document to be signed
# @@ -27,17 +23,4 @@ export interface StdSignDoc {
#  /** Returns a JSON string with objects sorted by key */
#  export declare function sortedJsonStringify(obj: any): string;
#  export declare function makeSignDoc(msgs: readonly AminoMsg[], fee: StdFee, chainId: string, memo: string | undefined, accountNumber: number | string, sequence: number | string): StdSignDoc;
# -/**
# - * Takes a valid JSON document and performs the following escapings in string values:
# - *
# - * `&` -> `\u0026`
# - * `<` -> `\u003c`
# - * `>` -> `\u003e`
# - *
# - * Since those characters do not occur in other places of the JSON document, only
# - * string values are affected.
# - *
# - * If the input is invalid JSON, the behaviour is undefined.
# - */
# -export declare function escapeCharacters(input: string): string;
#  export declare function serializeSignDoc(signDoc: StdSignDoc): Uint8Array;
# diff --git a/node_modules/@cosmjs/amino/build/signdoc.js b/node_modules/@cosmjs/amino/build/signdoc.js
# index 30c9545..cbd1369 100644
# --- a/node_modules/@cosmjs/amino/build/signdoc.js
# +++ b/node_modules/@cosmjs/amino/build/signdoc.js
# @@ -1,6 +1,6 @@
#  "use strict";
#  Object.defineProperty(exports, "__esModule", { value: true });
# -exports.serializeSignDoc = exports.escapeCharacters = exports.makeSignDoc = exports.sortedJsonStringify = void 0;
# +exports.serializeSignDoc = exports.makeSignDoc = exports.sortedJsonStringify = void 0;
#  /* eslint-disable @typescript-eslint/naming-convention */
#  const encoding_1 = require("@cosmjs/encoding");
#  const math_1 = require("@cosmjs/math");
# @@ -36,30 +36,8 @@ function makeSignDoc(msgs, fee, chainId, memo, accountNumber, sequence) {
#      };
#  }
#  exports.makeSignDoc = makeSignDoc;
# -/**
# - * Takes a valid JSON document and performs the following escapings in string values:
# - *
# - * `&` -> `\u0026`
# - * `<` -> `\u003c`
# - * `>` -> `\u003e`
# - *
# - * Since those characters do not occur in other places of the JSON document, only
# - * string values are affected.
# - *
# - * If the input is invalid JSON, the behaviour is undefined.
# - */
# -function escapeCharacters(input) {
# -    // When we migrate to target es2021 or above, we can use replaceAll instead of global patterns.
# -    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll
# -    const amp = /&/g;
# -    const lt = /</g;
# -    const gt = />/g;
# -    return input.replace(amp, "\\u0026").replace(lt, "\\u003c").replace(gt, "\\u003e");
# -}
# -exports.escapeCharacters = escapeCharacters;
#  function serializeSignDoc(signDoc) {
# -    const serialized = escapeCharacters(sortedJsonStringify(signDoc));
# -    return (0, encoding_1.toUtf8)(serialized);
# +    return (0, encoding_1.toUtf8)(sortedJsonStringify(signDoc));
#  }
#  exports.serializeSignDoc = serializeSignDoc;
#  //# sourceMappingURL=signdoc.js.map
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/signdoc.js.map b/node_modules/@cosmjs/amino/build/signdoc.js.map
# index 03f3740..f4bc673 100644
# --- a/node_modules/@cosmjs/amino/build/signdoc.js.map
# +++ b/node_modules/@cosmjs/amino/build/signdoc.js.map
# @@ -1 +1 @@
# -{"version":3,"file":"signdoc.js","sourceRoot":"","sources":["../src/signdoc.ts"],"names":[],"mappings":";;;AAAA,yDAAyD;AACzD,+CAA0C;AAC1C,uCAAsC;AAgCtC,SAAS,YAAY,CAAC,GAAQ;IAC5B,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,IAAI,EAAE;QAC3C,OAAO,GAAG,CAAC;KACZ;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QACtB,OAAO,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;KAC9B;IACD,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;IAC3C,MAAM,MAAM,GAAwB,EAAE,CAAC;IACvC,sFAAsF;IACtF,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;QACzB,MAAM,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,uDAAuD;AACvD,6EAA6E;AAC7E,SAAgB,mBAAmB,CAAC,GAAQ;IAC1C,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3C,CAAC;AAFD,kDAEC;AAED,SAAgB,WAAW,CACzB,IAAyB,EACzB,GAAW,EACX,OAAe,EACf,IAAwB,EACxB,aAA8B,EAC9B,QAAyB;IAEzB,OAAO;QACL,QAAQ,EAAE,OAAO;QACjB,cAAc,EAAE,aAAM,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE;QACtE,QAAQ,EAAE,aAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE;QAC3D,GAAG,EAAE,GAAG;QACR,IAAI,EAAE,IAAI;QACV,IAAI,EAAE,IAAI,IAAI,EAAE;KACjB,CAAC;AACJ,CAAC;AAhBD,kCAgBC;AAED;;;;;;;;;;;GAWG;AACH,SAAgB,gBAAgB,CAAC,KAAa;IAC5C,+FAA+F;IAC/F,qGAAqG;IACrG,MAAM,GAAG,GAAG,IAAI,CAAC;IACjB,MAAM,EAAE,GAAG,IAAI,CAAC;IAChB,MAAM,EAAE,GAAG,IAAI,CAAC;IAChB,OAAO,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;AACrF,CAAC;AAPD,4CAOC;AAED,SAAgB,gBAAgB,CAAC,OAAmB;IAClD,MAAM,UAAU,GAAG,gBAAgB,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,CAAC;IAClE,OAAO,IAAA,iBAAM,EAAC,UAAU,CAAC,CAAC;AAC5B,CAAC;AAHD,4CAGC"}
# \ No newline at end of file
# +{"version":3,"file":"signdoc.js","sourceRoot":"","sources":["../src/signdoc.ts"],"names":[],"mappings":";;;AAAA,yDAAyD;AACzD,+CAA0C;AAC1C,uCAAsC;AA4BtC,SAAS,YAAY,CAAC,GAAQ;IAC5B,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,IAAI,EAAE;QAC3C,OAAO,GAAG,CAAC;KACZ;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QACtB,OAAO,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;KAC9B;IACD,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;IAC3C,MAAM,MAAM,GAAwB,EAAE,CAAC;IACvC,sFAAsF;IACtF,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;QACzB,MAAM,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,uDAAuD;AACvD,6EAA6E;AAC7E,SAAgB,mBAAmB,CAAC,GAAQ;IAC1C,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3C,CAAC;AAFD,kDAEC;AAED,SAAgB,WAAW,CACzB,IAAyB,EACzB,GAAW,EACX,OAAe,EACf,IAAwB,EACxB,aAA8B,EAC9B,QAAyB;IAEzB,OAAO;QACL,QAAQ,EAAE,OAAO;QACjB,cAAc,EAAE,aAAM,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE;QACtE,QAAQ,EAAE,aAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE;QAC3D,GAAG,EAAE,GAAG;QACR,IAAI,EAAE,IAAI;QACV,IAAI,EAAE,IAAI,IAAI,EAAE;KACjB,CAAC;AACJ,CAAC;AAhBD,kCAgBC;AAED,SAAgB,gBAAgB,CAAC,OAAmB;IAClD,OAAO,IAAA,iBAAM,EAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,CAAC;AAC9C,CAAC;AAFD,4CAEC"}
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/signdoc.spec.d.ts b/node_modules/@cosmjs/amino/build/signdoc.spec.d.ts
# new file mode 100644
# index 0000000..cb0ff5c
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/signdoc.spec.d.ts
# @@ -0,0 +1 @@
# +export {};
# diff --git a/node_modules/@cosmjs/amino/build/signdoc.spec.js b/node_modules/@cosmjs/amino/build/signdoc.spec.js
# new file mode 100644
# index 0000000..2d718c2
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/signdoc.spec.js
# @@ -0,0 +1,117 @@
# +"use strict";
# +Object.defineProperty(exports, "__esModule", { value: true });
# +/* eslint-disable @typescript-eslint/naming-convention */
# +const crypto_1 = require("@cosmjs/crypto");
# +const encoding_1 = require("@cosmjs/encoding");
# +const signdoc_1 = require("./signdoc");
# +function makeRandomAddress() {
# +    return (0, encoding_1.toBech32)("cosmos", crypto_1.Random.getBytes(20));
# +}
# +const testAddress = "cosmos1pkptre7fdkl6gfrzlesjjvhxhlc3r4gmmk8rs6";
# +const testValidatorAddress = "cosmosvaloper1yfkkk04ve8a0sugj4fe6q6zxuvmvza8r3arurr";
# +describe("encoding", () => {
# +    describe("sortedJsonStringify", () => {
# +        it("leaves non-objects unchanged", () => {
# +            expect((0, signdoc_1.sortedJsonStringify)(true)).toEqual(`true`);
# +            expect((0, signdoc_1.sortedJsonStringify)(false)).toEqual(`false`);
# +            expect((0, signdoc_1.sortedJsonStringify)("aabbccdd")).toEqual(`"aabbccdd"`);
# +            expect((0, signdoc_1.sortedJsonStringify)(75)).toEqual(`75`);
# +            expect((0, signdoc_1.sortedJsonStringify)(null)).toEqual(`null`);
# +            expect((0, signdoc_1.sortedJsonStringify)([5, 6, 7, 1])).toEqual(`[5,6,7,1]`);
# +            expect((0, signdoc_1.sortedJsonStringify)([5, ["a", "b"], true, null, 1])).toEqual(`[5,["a","b"],true,null,1]`);
# +        });
# +        it("sorts objects by key", () => {
# +            // already sorted
# +            expect((0, signdoc_1.sortedJsonStringify)({})).toEqual(`{}`);
# +            expect((0, signdoc_1.sortedJsonStringify)({ a: 3 })).toEqual(`{"a":3}`);
# +            expect((0, signdoc_1.sortedJsonStringify)({ a: 3, b: 2, c: 1 })).toEqual(`{"a":3,"b":2,"c":1}`);
# +            // not yet sorted
# +            expect((0, signdoc_1.sortedJsonStringify)({ b: 2, a: 3, c: 1 })).toEqual(`{"a":3,"b":2,"c":1}`);
# +            expect((0, signdoc_1.sortedJsonStringify)({ aaa: true, aa: true, a: true })).toEqual(`{"a":true,"aa":true,"aaa":true}`);
# +        });
# +        it("sorts nested objects", () => {
# +            // already sorted
# +            expect((0, signdoc_1.sortedJsonStringify)({ x: { y: { z: null } } })).toEqual(`{"x":{"y":{"z":null}}}`);
# +            // not yet sorted
# +            expect((0, signdoc_1.sortedJsonStringify)({ b: { z: true, x: true, y: true }, a: true, c: true })).toEqual(`{"a":true,"b":{"x":true,"y":true,"z":true},"c":true}`);
# +        });
# +        it("sorts objects in arrays", () => {
# +            // already sorted
# +            expect((0, signdoc_1.sortedJsonStringify)([1, 2, { x: { y: { z: null } } }, 4])).toEqual(`[1,2,{"x":{"y":{"z":null}}},4]`);
# +            // not yet sorted
# +            expect((0, signdoc_1.sortedJsonStringify)([1, 2, { b: { z: true, x: true, y: true }, a: true, c: true }, 4])).toEqual(`[1,2,{"a":true,"b":{"x":true,"y":true,"z":true},"c":true},4]`);
# +        });
# +    });
# +    describe("makeSignDoc", () => {
# +        it("works", () => {
# +            const chainId = "testspace-12";
# +            const msg1 = {
# +                type: "cosmos-sdk/MsgDelegate",
# +                value: {
# +                    delegator_address: testAddress,
# +                    validator_address: testValidatorAddress,
# +                    amount: { amount: "1234", denom: "ustake" },
# +                },
# +            };
# +            const msg2 = {
# +                type: "cosmos-sdk/MsgSend",
# +                value: {
# +                    from_address: testAddress,
# +                    to_address: makeRandomAddress(),
# +                    amount: [{ amount: "1234567", denom: "ucosm" }],
# +                },
# +            };
# +            const fee = {
# +                amount: [{ amount: "2000", denom: "ucosm" }],
# +                gas: "180000", // 180k
# +            };
# +            const memo = "Use your power wisely";
# +            const accountNumber = 15;
# +            const sequence = 16;
# +            const signDoc = (0, signdoc_1.makeSignDoc)([msg1, msg2], fee, chainId, memo, accountNumber, sequence);
# +            expect(signDoc).toEqual({
# +                msgs: [msg1, msg2],
# +                fee: fee,
# +                chain_id: chainId,
# +                account_number: accountNumber.toString(),
# +                sequence: sequence.toString(),
# +                memo: memo,
# +            });
# +        });
# +        it("works with undefined memo", () => {
# +            const chainId = "testspace-12";
# +            const msg1 = {
# +                type: "cosmos-sdk/MsgDelegate",
# +                value: {
# +                    delegator_address: testAddress,
# +                    validator_address: testValidatorAddress,
# +                    amount: { amount: "1234", denom: "ustake" },
# +                },
# +            };
# +            const msg2 = {
# +                type: "cosmos-sdk/MsgSend",
# +                value: {
# +                    from_address: testAddress,
# +                    to_address: makeRandomAddress(),
# +                    amount: [{ amount: "1234567", denom: "ucosm" }],
# +                },
# +            };
# +            const fee = {
# +                amount: [{ amount: "2000", denom: "ucosm" }],
# +                gas: "180000", // 180k
# +            };
# +            const accountNumber = 15;
# +            const sequence = 16;
# +            const signDoc = (0, signdoc_1.makeSignDoc)([msg1, msg2], fee, chainId, undefined, accountNumber, sequence);
# +            expect(signDoc).toEqual({
# +                msgs: [msg1, msg2],
# +                fee: fee,
# +                chain_id: chainId,
# +                account_number: accountNumber.toString(),
# +                sequence: sequence.toString(),
# +                memo: "",
# +            });
# +        });
# +    });
# +});
# +//# sourceMappingURL=signdoc.spec.js.map
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/signdoc.spec.js.map b/node_modules/@cosmjs/amino/build/signdoc.spec.js.map
# new file mode 100644
# index 0000000..ed7dba5
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/signdoc.spec.js.map
# @@ -0,0 +1 @@
# +{"version":3,"file":"signdoc.spec.js","sourceRoot":"","sources":["../src/signdoc.spec.ts"],"names":[],"mappings":"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"}
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/stdtx.spec.d.ts b/node_modules/@cosmjs/amino/build/stdtx.spec.d.ts
# new file mode 100644
# index 0000000..cb0ff5c
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/stdtx.spec.d.ts
# @@ -0,0 +1 @@
# +export {};
# diff --git a/node_modules/@cosmjs/amino/build/stdtx.spec.js b/node_modules/@cosmjs/amino/build/stdtx.spec.js
# new file mode 100644
# index 0000000..6355623
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/stdtx.spec.js
# @@ -0,0 +1,52 @@
# +"use strict";
# +Object.defineProperty(exports, "__esModule", { value: true });
# +/* eslint-disable @typescript-eslint/naming-convention */
# +const coins_1 = require("./coins");
# +const signdoc_1 = require("./signdoc");
# +const stdtx_1 = require("./stdtx");
# +describe("makeStdTx", () => {
# +    it("can make an StdTx from a SignDoc and one signature", () => {
# +        const fee = { amount: (0, coins_1.coins)(123, "ucosm"), gas: "22" };
# +        const signDoc = (0, signdoc_1.makeSignDoc)([], fee, "chain-xy", "hello", 3, 4);
# +        const signature = {
# +            pub_key: {
# +                type: "tendermint/PubKeySecp256k1",
# +                value: "AtQaCqFnshaZQp6rIkvAPyzThvCvXSDO+9AzbxVErqJP",
# +            },
# +            signature: "1nUcIH0CLT0/nQ0mBTDrT6kMG20NY/PsH7P2gc4bpYNGLEYjBmdWevXUJouSE/9A/60QG9cYeqyTe5kFDeIPxQ==",
# +        };
# +        const signedTx = (0, stdtx_1.makeStdTx)(signDoc, signature);
# +        expect(signedTx).toEqual({
# +            msg: [],
# +            memo: "hello",
# +            fee: fee,
# +            signatures: [signature],
# +        });
# +    });
# +    it("can make an StdTx from a SignDoc and multiple signatures", () => {
# +        const fee = { amount: (0, coins_1.coins)(123, "ucosm"), gas: "22" };
# +        const signDoc = (0, signdoc_1.makeSignDoc)([], fee, "chain-xy", "hello", 3, 4);
# +        const signature1 = {
# +            pub_key: {
# +                type: "tendermint/PubKeySecp256k1",
# +                value: "AtQaCqFnshaZQp6rIkvAPyzThvCvXSDO+9AzbxVErqJP",
# +            },
# +            signature: "1nUcIH0CLT0/nQ0mBTDrT6kMG20NY/PsH7P2gc4bpYNGLEYjBmdWevXUJouSE/9A/60QG9cYeqyTe5kFDeIPxQ==",
# +        };
# +        const signature2 = {
# +            pub_key: {
# +                type: "tendermint/PubKeySecp256k1",
# +                value: "A5qFcJBJvEK/fOmEAY0DHNWwSRZ9TEfNZyH8VoVvDtAq",
# +            },
# +            signature: "NK1Oy4EUGAsoC03c1wi9GG03JC/39LEdautC5Jk643oIbEPqeXHMwaqbdvO/Jws0X/NAXaN8SAy2KNY5Qml+5Q==",
# +        };
# +        const signedTx = (0, stdtx_1.makeStdTx)(signDoc, [signature1, signature2]);
# +        expect(signedTx).toEqual({
# +            msg: [],
# +            memo: "hello",
# +            fee: fee,
# +            signatures: [signature1, signature2],
# +        });
# +    });
# +});
# +//# sourceMappingURL=stdtx.spec.js.map
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/stdtx.spec.js.map b/node_modules/@cosmjs/amino/build/stdtx.spec.js.map
# new file mode 100644
# index 0000000..81e02cb
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/stdtx.spec.js.map
# @@ -0,0 +1 @@
# +{"version":3,"file":"stdtx.spec.js","sourceRoot":"","sources":["../src/stdtx.spec.ts"],"names":[],"mappings":";;AAAA,yDAAyD;AACzD,mCAAgC;AAEhC,uCAAgD;AAChD,mCAAoC;AAEpC,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;IACzB,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE;QAC5D,MAAM,GAAG,GAAW,EAAE,MAAM,EAAE,IAAA,aAAK,EAAC,GAAG,EAAE,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;QAC/D,MAAM,OAAO,GAAG,IAAA,qBAAW,EAAC,EAAE,EAAE,GAAG,EAAE,UAAU,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAChE,MAAM,SAAS,GAAiB;YAC9B,OAAO,EAAE;gBACP,IAAI,EAAE,4BAA4B;gBAClC,KAAK,EAAE,8CAA8C;aACtD;YACD,SAAS,EAAE,0FAA0F;SACtG,CAAC;QACF,MAAM,QAAQ,GAAG,IAAA,iBAAS,EAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAC/C,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC;YACvB,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,OAAO;YACb,GAAG,EAAE,GAAG;YACR,UAAU,EAAE,CAAC,SAAS,CAAC;SACxB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0DAA0D,EAAE,GAAG,EAAE;QAClE,MAAM,GAAG,GAAW,EAAE,MAAM,EAAE,IAAA,aAAK,EAAC,GAAG,EAAE,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;QAC/D,MAAM,OAAO,GAAG,IAAA,qBAAW,EAAC,EAAE,EAAE,GAAG,EAAE,UAAU,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAChE,MAAM,UAAU,GAAiB;YAC/B,OAAO,EAAE;gBACP,IAAI,EAAE,4BAA4B;gBAClC,KAAK,EAAE,8CAA8C;aACtD;YACD,SAAS,EAAE,0FAA0F;SACtG,CAAC;QACF,MAAM,UAAU,GAAiB;YAC/B,OAAO,EAAE;gBACP,IAAI,EAAE,4BAA4B;gBAClC,KAAK,EAAE,8CAA8C;aACtD;YACD,SAAS,EAAE,0FAA0F;SACtG,CAAC;QACF,MAAM,QAAQ,GAAG,IAAA,iBAAS,EAAC,OAAO,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC;QAC9D,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC;YACvB,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,OAAO;YACb,GAAG,EAAE,GAAG;YACR,UAAU,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;SACrC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC"}
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/testutils.spec.d.ts b/node_modules/@cosmjs/amino/build/testutils.spec.d.ts
# new file mode 100644
# index 0000000..5ba89d2
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/testutils.spec.d.ts
# @@ -0,0 +1,13 @@
# +import { MultisigThresholdPubkey } from "./pubkeys";
# +export declare const base64Matcher: RegExp;
# +export declare const test1: import("./pubkeys").Pubkey;
# +export declare const test2: import("./pubkeys").Pubkey;
# +export declare const test3: import("./pubkeys").Pubkey;
# +export declare const testgroup1: MultisigThresholdPubkey;
# +export declare const testgroup1PubkeyBech32 = "wasmpub1ytql0csgqgfzd666axrjzquvkkvwu4qnp5603cyp3emc02sxzwdqutgqym9dke3t2h83dpv6vufzd666axrjzq5sdudaj5tv3nfm2f3exgkgqxlcwfxplf0g0rqwx2um6mqthzc0dqfzd666axrjzq7vjdge6cdksmdx7r5vl72rrc6kk30ezp376mup77wamzvgtzqq7v7aysdd";
# +export declare const testgroup2: MultisigThresholdPubkey;
# +export declare const testgroup2PubkeyBech32 = "wasmpub1ytql0csgqyfzd666axrjzquvkkvwu4qnp5603cyp3emc02sxzwdqutgqym9dke3t2h83dpv6vufzd666axrjzq5sdudaj5tv3nfm2f3exgkgqxlcwfxplf0g0rqwx2um6mqthzc0dqfzd666axrjzq7vjdge6cdksmdx7r5vl72rrc6kk30ezp376mup77wamzvgtzqq7vc4ejke";
# +export declare const testgroup3: MultisigThresholdPubkey;
# +export declare const testgroup3PubkeyBech32 = "wasmpub1ytql0csgqgfzd666axrjzquvkkvwu4qnp5603cyp3emc02sxzwdqutgqym9dke3t2h83dpv6vufzd666axrjzq7vjdge6cdksmdx7r5vl72rrc6kk30ezp376mup77wamzvgtzqq7vzjhugu";
# +export declare const testgroup4: MultisigThresholdPubkey;
# +export declare const testgroup4PubkeyBech32 = "wasmpub1ytql0csgqgfzd666axrjzq7vjdge6cdksmdx7r5vl72rrc6kk30ezp376mup77wamzvgtzqq7vfzd666axrjzquvkkvwu4qnp5603cyp3emc02sxzwdqutgqym9dke3t2h83dpv6vujvg56k";
# diff --git a/node_modules/@cosmjs/amino/build/testutils.spec.js b/node_modules/@cosmjs/amino/build/testutils.spec.js
# new file mode 100644
# index 0000000..6f40bfd
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/testutils.spec.js
# @@ -0,0 +1,52 @@
# +"use strict";
# +Object.defineProperty(exports, "__esModule", { value: true });
# +exports.testgroup4PubkeyBech32 = exports.testgroup4 = exports.testgroup3PubkeyBech32 = exports.testgroup3 = exports.testgroup2PubkeyBech32 = exports.testgroup2 = exports.testgroup1PubkeyBech32 = exports.testgroup1 = exports.test3 = exports.test2 = exports.test1 = exports.base64Matcher = void 0;
# +const encoding_1 = require("./encoding");
# +exports.base64Matcher = /^(?:[a-zA-Z0-9+/]{4})*(?:|(?:[a-zA-Z0-9+/]{3}=)|(?:[a-zA-Z0-9+/]{2}==)|(?:[a-zA-Z0-9+/]{1}===))$/;
# +// ./build/wasmd keys add test1
# +// ./build/wasmd keys add test2
# +// ./build/wasmd keys add test3
# +// ./build/wasmd keys add testgroup1 --multisig=test1,test2,test3 --multisig-threshold 2
# +// ./build/wasmd keys add testgroup2 --multisig=test1,test2,test3 --multisig-threshold 1
# +// # By default pubkeys are sorted by its address data (https://github.com/cosmos/cosmos-sdk/blob/v0.42.2/client/keys/add.go#L172-L174)
# +// ./build/wasmd keys add testgroup3 --multisig=test3,test1 --multisig-threshold 2
# +// ./build/wasmd keys add testgroup4 --multisig=test3,test1 --nosort --multisig-threshold 2
# +exports.test1 = (0, encoding_1.decodeBech32Pubkey)("wasmpub1addwnpepqwxttx8w2sfs6d8cuzqcuau84grp8xsw95qzdjkmvc44tnckskdxw3zw2km");
# +exports.test2 = (0, encoding_1.decodeBech32Pubkey)("wasmpub1addwnpepq2gx7x7e29kge5a4ycunytyqr0u8ynql5h583s8r9wdads9m3v8ks6y0nhc");
# +exports.test3 = (0, encoding_1.decodeBech32Pubkey)("wasmpub1addwnpepq0xfx5vavxmgdkn0p6x0l9p3udttghu3qcldd7ql08wa3xy93qq0xuzvtxc");
# +// 2/3 multisig
# +exports.testgroup1 = {
# +    type: "tendermint/PubKeyMultisigThreshold",
# +    value: {
# +        threshold: "2",
# +        pubkeys: [exports.test1, exports.test2, exports.test3],
# +    },
# +};
# +exports.testgroup1PubkeyBech32 = "wasmpub1ytql0csgqgfzd666axrjzquvkkvwu4qnp5603cyp3emc02sxzwdqutgqym9dke3t2h83dpv6vufzd666axrjzq5sdudaj5tv3nfm2f3exgkgqxlcwfxplf0g0rqwx2um6mqthzc0dqfzd666axrjzq7vjdge6cdksmdx7r5vl72rrc6kk30ezp376mup77wamzvgtzqq7v7aysdd";
# +exports.testgroup2 = {
# +    type: "tendermint/PubKeyMultisigThreshold",
# +    value: {
# +        threshold: "1",
# +        pubkeys: [exports.test1, exports.test2, exports.test3],
# +    },
# +};
# +exports.testgroup2PubkeyBech32 = "wasmpub1ytql0csgqyfzd666axrjzquvkkvwu4qnp5603cyp3emc02sxzwdqutgqym9dke3t2h83dpv6vufzd666axrjzq5sdudaj5tv3nfm2f3exgkgqxlcwfxplf0g0rqwx2um6mqthzc0dqfzd666axrjzq7vjdge6cdksmdx7r5vl72rrc6kk30ezp376mup77wamzvgtzqq7vc4ejke";
# +// 2/2 multisig
# +exports.testgroup3 = {
# +    type: "tendermint/PubKeyMultisigThreshold",
# +    value: {
# +        threshold: "2",
# +        pubkeys: [exports.test1, exports.test3],
# +    },
# +};
# +exports.testgroup3PubkeyBech32 = "wasmpub1ytql0csgqgfzd666axrjzquvkkvwu4qnp5603cyp3emc02sxzwdqutgqym9dke3t2h83dpv6vufzd666axrjzq7vjdge6cdksmdx7r5vl72rrc6kk30ezp376mup77wamzvgtzqq7vzjhugu";
# +// 2/2 multisig with custom sorting
# +exports.testgroup4 = {
# +    type: "tendermint/PubKeyMultisigThreshold",
# +    value: {
# +        threshold: "2",
# +        pubkeys: [exports.test3, exports.test1],
# +    },
# +};
# +exports.testgroup4PubkeyBech32 = "wasmpub1ytql0csgqgfzd666axrjzq7vjdge6cdksmdx7r5vl72rrc6kk30ezp376mup77wamzvgtzqq7vfzd666axrjzquvkkvwu4qnp5603cyp3emc02sxzwdqutgqym9dke3t2h83dpv6vujvg56k";
# +//# sourceMappingURL=testutils.spec.js.map
# \ No newline at end of file
# diff --git a/node_modules/@cosmjs/amino/build/testutils.spec.js.map b/node_modules/@cosmjs/amino/build/testutils.spec.js.map
# new file mode 100644
# index 0000000..0733308
# --- /dev/null
# +++ b/node_modules/@cosmjs/amino/build/testutils.spec.js.map
# @@ -0,0 +1 @@
# +{"version":3,"file":"testutils.spec.js","sourceRoot":"","sources":["../src/testutils.spec.ts"],"names":[],"mappings":";;;AAAA,yCAAgD;AAGnC,QAAA,aAAa,GACxB,kGAAkG,CAAC;AAErG,+BAA+B;AAC/B,+BAA+B;AAC/B,+BAA+B;AAC/B,wFAAwF;AACxF,wFAAwF;AACxF,uIAAuI;AACvI,kFAAkF;AAClF,2FAA2F;AAE9E,QAAA,KAAK,GAAG,IAAA,6BAAkB,EACrC,6EAA6E,CAI9E,CAAC;AACW,QAAA,KAAK,GAAG,IAAA,6BAAkB,EACrC,6EAA6E,CAI9E,CAAC;AACW,QAAA,KAAK,GAAG,IAAA,6BAAkB,EACrC,6EAA6E,CAI9E,CAAC;AAEF,eAAe;AACF,QAAA,UAAU,GAA4B;IACjD,IAAI,EAAE,oCAAoC;IAC1C,KAAK,EAAE;QACL,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,CAAC,aAAK,EAAE,aAAK,EAAE,aAAK,CAAC;KAC/B;CACF,CAAC;AACW,QAAA,sBAAsB,GACjC,0NAA0N,CAAC;AAEhN,QAAA,UAAU,GAA4B;IACjD,IAAI,EAAE,oCAAoC;IAC1C,KAAK,EAAE;QACL,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,CAAC,aAAK,EAAE,aAAK,EAAE,aAAK,CAAC;KAC/B;CACF,CAAC;AACW,QAAA,sBAAsB,GACjC,0NAA0N,CAAC;AAE7N,eAAe;AACF,QAAA,UAAU,GAA4B;IACjD,IAAI,EAAE,oCAAoC;IAC1C,KAAK,EAAE;QACL,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,CAAC,aAAK,EAAE,aAAK,CAAC;KACxB;CACF,CAAC;AACW,QAAA,sBAAsB,GACjC,0JAA0J,CAAC;AAE7J,mCAAmC;AACtB,QAAA,UAAU,GAA4B;IACjD,IAAI,EAAE,oCAAoC;IAC1C,KAAK,EAAE;QACL,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,CAAC,aAAK,EAAE,aAAK,CAAC;KACxB;CACF,CAAC;AACW,QAAA,sBAAsB,GACjC,0JAA0J,CAAC"}
# \ No newline at end of file
